{"version":3,"sources":["components/MenuBar/MenuIcons/logo.png","components/MenuBar/MenuItem.js","components/MenuBar/MenuBar.jsx","EventController.js","sounds/delete.wav","sounds/snip.wav","util/color.js","shapes/Cut/Cut.js","shapes/Premise/Premise.js","util/collisions.js","sounds/pop.wav","util/otherUtil.js","components/Paper/Sheet/Sheet.js","components/Paper/History/HistoryItem.jsx","components/Paper/History/History.jsx","components/Paper/UtilBar/UtilBar.jsx","components/Paper/UtilBar/UtilBarItem.jsx","components/Paper/Paper.jsx","components/Button/Button.jsx","components/ButtonGroup/ButtonGroup.jsx","util/proof-util.js","components/SideBar/SideBar.jsx","components/Modal/Modal.jsx","components/Workspace/Workspace.jsx","components/App/App.jsx","index.js"],"names":["MenuItem","props","styling","SVGS","id","xmlns","viewBox","width","height","class","d","transform","text","img","style","custom_style","className","classString","onClick","label","fontSize","MenuBar","MenuItems","left","window","open","marginLeft","graph","console","log","input","document","createElement","type","onchange","ev","file","target","files","reader","FileReader","readAsText","onload","readerEvent","content","result","confirm","clear","dataObj","JSON","parse","fromJSON","alert","click","graphJSON","toJSON","Blob","stringify","a","url","URL","createObjectURL","href","download","body","appendChild","setTimeout","removeChild","revokeObjectURL","right","handleMuteToggle","map","menu_item","E","this","mousePosition","x","y","keys","which","key","isMouseDown","toLocaleLowerCase","$","on","event","clientX","clientY","color","background","odd","inactive","active","even","default","CUT_DEFAULTS","position","size","attrs","rect","fill","stroke","strokeWidth","ref","Cut","markup","tagName","selector","config","sheet","options","_","cloneDeep","Object","assign","child","attributes","cut","level","addTo","addTools","Audio","Snip","play","hasparent","get","parent","getCell","unembed","embed","toBack","treeResize","getParentCell","children","getEmbeddedCells","remove","handleCollisions","paper","handleDeleteCell","colorByLevel","premise","element","elementView","findView","jpaper","removeTools","boundaryTool","joint","Boundary","NWresizeTool","Button","createResizeTool","cursor","NEresizeTool","SWresizeTool","SEresizeTool","el","resize_mousedown","bind","rect_tools","toolsView","ToolsView","tools","hideTools","Element","prev_pos","current_pos","MIN_SIZE","attr","resize_mouseup","direction","getAttribute","resize_mousemove","stopPropagation","data","delta","modifiers","size_x","size_y","pos_x","pos_y","RangeError","set","off","r","offset","substring","rotate","PREMISE_DEFAULTS","Premise","fast","contains","bbox","otherbbox","bbox_info","otherbbox_info","overlapsCells","cells","cell_collisions","cell","intersects","getBoundingBox","push","mainbbox","cellInArray","arr","e","NSPremise","define","NSCut","DEFAULT_BACKGROUND_COLORS","Sheet","handlePlayAudio","Graph","cellNamespace","nameSpace","spacing","mute","create","pop","Pop","snip","clones","clone","resetCells","exported","getCells","json","parsed","new_element","addPremise","addCut","dom_element","trigger","cellbbox","length","smallest_area","smallest_cell","area","findSmallestCell","findPotentialParents","filterChildren","treeToFront","elements_inside","findElementsInside","pack","cleanOverlaps","root","findRoot","pack_rec","siblings","siblingsbbox","min_x","max_x","min_y","max_y","i","getCellsBoundingBox","roots","getCellsByLevel","sort","b","getArea","current","next","overlaps","invader","separate","dupe","main","invaderbbox","shared_x","shared_y","Math","abs","dir","sign","treeMove","elements","targetbbox","potential_parents","new_child_bbox","potential_children","node","toFront","subgraph","selected","root_clone","new_root","subgraphToGraph","embeds","findCellInSubgraph","resize_value","center_nodes","color_config","parity","next_children","HistoryItem","prevProps","prevState","num","total","importCells","scaleContentToFit","Paper","getElementById","model","preventContextMenu","clickThreshold","updateViews","setInteractivity","closest","addClass","removeClass","backgroundColor","React","Component","History","handleJump","setState","index","handleHistoryJump","getItem","MAX_SIZE","batch_mode","batch_state","locked","state","callback","item","splice","shift","history_item","id_prefix","UtilBar","handleChangeActive","Children","isValidElement","cloneElement","UtilBarItem","icon","PAPER_SIZE","history","lock","unlock","onGraphUpdate","onKeyUp","keyCode","previousPremiseCode","canInsertPremise","onKeyDown","getMode","selected_premise","delete_noise","Delete","destroy","error","toLocaleUpperCase","code","charCodeAt","ctrlKey","metaKey","getRelativeMousePos","saved_template","cloneSubgraph","deep","mouse_adjusted","addSubgraph","onMouseDown","initial_cut_pos","paper_element","getBoundingClientRect","top","temp_cut","preventDefault","onMouseUp","startBatch","action","name","handleClearAction","endBatch","onMouseMove","min","onMouseEnter","focus","paperRoot","createRef","show","setPaperEvents","exportAsJSON","css","mode","sourcePaper","modal_cells","addCells","cellView","evt","showTools","modelView","undefined","nextAction","handleActionChange","shiftKey","new_state","undo","redo","styles","wrapperWidth","wrapperHeight","tabIndex","faHistory","handleInitializeHistory","ButtonGroup","buttons","button","inferenceInsertion","arguments","__proto__","constructor","handleOpenModal","inferenceErasure","insertDoubleCut","Error","multipliers","deleteDoubleCut","forEach","iteration","iterationend","model_clone","sub_id","legalIteration","obliterate","deiteration","model_id","ancestor","matchingModel","all_models","models","model_one","model_two","model_one_children","model_two_children","outer","search","indexOf","SideBar","proof","charAt","toUpperCase","slice","onStateSwitch","Modal","Workspace","Event","handleModalExit","showModal","insertPosition","handleModalInsert","proofPaper","importFromJSON","modalPaper","mainPaper","hide","copy","handleStateSwitch","paper_id","App","muted","item_label","mute_button","find","mute_button_label","toggleClass","hasClass","html","audio","sound","workspace","pause","currentTime","APP","ReactDOM","render"],"mappings":"mcAAe,I,YCOA,SAASA,EAASC,GAG/B,IAAMC,EAAO,wKAcPC,EAAO,CACX,uBAAwB,sBAAKC,GAAG,UAAU,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,oBAAoBC,MAAM,MAAMC,OAAO,MAAxH,UAA8H,+BAAM,gCAAQN,MAAuB,sBAAMO,MAAM,QAAQC,EAAE,8mCAA8mCC,UAAU,kCACx0C,yBAA0B,sBAAKP,GAAG,UAAU,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,oBAAoBC,MAAM,MAAMC,OAAO,MAAxH,UAA8H,+BAAM,gCAAQN,MAAuB,sBAAMO,MAAM,QAAQC,EAAE,uPAAuPC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,yUAAyUC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,0GAA0GC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,oHAAoHC,UAAU,kCACrrC,yBAA0B,sBAAKP,GAAG,UAAU,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,oBAAoBC,MAAM,MAAMC,OAAO,MAAxH,UAA8H,+BAAM,gCAAQN,MAAuB,sBAAMO,MAAM,QAAQC,EAAE,uPAAuPC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,uUAAuUC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,0GAA0GC,UAAU,+BAA8B,sBAAMF,MAAM,QAAQC,EAAE,oHAAoHC,UAAU,mCAGlrCC,GADOX,EAAMW,KACM,KAAZX,EAAMY,IAAW,OAAS,OAG/BC,GAFQb,EAAMY,IAENZ,EAAMc,cAEpB,OACE,sBAAKD,MAAOA,EAAOE,UAAS,oBAAef,EAAMgB,aAAe,IAAMC,QAASjB,EAAMiB,QAAS,aAAYjB,EAAMkB,MAAhH,UACGhB,EAAKF,EAAMY,KAEZ,oBAAIG,UAAU,kBAAkBF,MAAO,CAACM,SAAUR,GAAlD,SAA0DX,EAAMW,U,oBClCvD,SAASS,EAAQpB,GAG9B,IAAMqB,EAAY,CAEhBC,KAAM,CACJ,CACEX,KAAM,GACNC,IAAK,uBACLK,QAAS,WACPM,OAAOC,KAAK,0DAEdV,aAAc,CACZW,WAAY,QAGhB,CACEd,KAAM,qBACNC,IAAK,GACLK,QAAS,aAGTH,aAAc,CACZW,WAAY,QAGhB,CACEd,KAAM,SACNC,IAAK,yBACLK,QA8DN,SAAkBS,GAChBC,QAAQC,IAAI,gBACZ,IAAMC,EAAQC,SAASC,cAAc,SACnCF,EAAMG,KAAO,OAEbH,EAAMI,SAAW,SAAUC,GACvB,IAAMC,EAAOD,EAAGE,OAAOC,MAAM,GAC7B,GAAkB,qBAAdF,EAAKH,KAAT,CAKA,IAAMM,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,EAAM,SACxBG,EAAOG,OAAS,SAAUC,GACtB,IAAMC,EAAUD,EAAYN,OAAOQ,OAEnC,GADcrB,OAAOsB,QAAQ,kDAClB,CACPnB,EAAMoB,QACN,IAAMC,EAAUC,KAAKC,MAAMN,GAC3BjB,EAAMwB,SAASH,UAZnBI,MAAM,+BAiBdtB,EAAMuB,SAtFJtC,aAAc,CACZW,WAAY,SAGhB,CACEd,KAAM,SACNC,IAAK,yBACLK,QAkCN,SAAkBS,GAChBC,QAAQC,IAAI,gBACZ,IAAIyB,EAAY3B,EAAM4B,SAChBnB,EAAO,IAAIoB,KAAK,CAACP,KAAKQ,UAAUH,IAAa,CAAErB,KAAM,qBACnDyB,EAAI3B,SAASC,cAAc,KAC7B2B,EAAMC,IAAIC,gBAAgBzB,GAC9BsB,EAAEI,KAAOH,EACTD,EAAEK,SAAW,aACbhC,SAASiC,KAAKC,YAAYP,GAC1BA,EAAEL,QACFa,YAAW,WACPnC,SAASiC,KAAKG,YAAYT,GAC1BlC,OAAOoC,IAAIQ,gBAAgBT,KAC5B,IA9CD5C,aAAc,CACZW,WAAY,SAMlB2C,MAAO,CACL,CACEzD,KAAM,SACNO,MAAO,eACPF,YAAa,cACbJ,IAAK,yBACLK,QAASjB,EAAMqE,iBACfvD,aAAc,CACZW,WAAY,QAGhB,CACEd,KAAM,WACNC,IAAK,yBACLK,QAAS,aACTH,aAAc,CACZW,WAAY,UA0DpB,OACE,sBAAKV,UAAU,aAAf,UACE,qBAAKA,UAAU,kBAAf,SACGM,EAAUC,KAAKgD,KAAI,SAAAC,GAAS,OAAI,cAACxE,EAAD,CACLY,KAAM4D,EAAU5D,KAChBC,IAAK2D,EAAU3D,IACfI,YAAauD,EAAUvD,YACvBC,QAASsD,EAAUtD,QACnBH,aAAcyD,EAAUzD,aACxBI,MAAOqD,EAAUrD,OACZqD,EAAU5D,WAG7C,qBAAKI,UAAU,mBAAf,SACGM,EAAU+C,MAAME,KAAI,SAAAC,GAAS,OAAI,cAACxE,EAAD,CACNY,KAAM4D,EAAU5D,KAChBC,IAAK2D,EAAU3D,IACfI,YAAauD,EAAUvD,YACvBC,QAASsD,EAAUtD,QACnBH,aAAcyD,EAAUzD,aACxBI,MAAOqD,EAAUrD,OACZqD,EAAU5D,c,kCChI/C6D,EAAI,I,WAdJ,aAAe,oBACXC,KAAKC,cAAiB,CAACC,EAAG,EAAGC,EAAG,GAChCH,KAAKI,KAAO,GACZJ,KAAKK,MAAQ,EACbL,KAAKM,IAAM,GACXN,KAAKO,aAAc,E,4CAGvB,SAASD,GACL,OAAON,KAAKM,IAAIE,sBAAwBF,GAAON,KAAKK,QAAUC,IAA0B,IAAnBN,KAAKI,KAAKE,O,MAOvFG,IAAEpD,UAAUqD,GAAG,WAAW,SAASC,GAC/BZ,EAAEK,KAAKO,EAAMN,QAAS,EACtBN,EAAEM,MAAQM,EAAMN,MAChBN,EAAEO,IAAMK,EAAML,OAGlBG,IAAEpD,UAAUqD,GAAG,SAAS,SAASC,GAC7BZ,EAAEK,KAAKO,EAAMN,QAAS,EACtBN,EAAEM,MAAQM,EAAMN,MAChBN,EAAEO,IAAMK,EAAML,OAGlBG,IAAEpD,UAAUqD,GAAG,aAAa,SAASC,GACjCZ,EAAEE,cAAgB,CACdC,EAAGS,EAAMC,QACTT,EAAGQ,EAAME,YAIjBJ,IAAEpD,UAAUqD,GAAG,aAAa,SAASC,GACjCZ,EAAEQ,aAAc,KAGpBE,IAAEpD,UAAUqD,GAAG,WAAW,SAASC,GAC/BZ,EAAEQ,aAAc,KAGLR,Q,gBC9CA,MAA0B,mC,gCCA1B,MAA0B,iCCA9Be,EACC,CACJC,WAAY,CACRC,IAAK,CACDC,SAAU,UACVC,OAAQ,aAEZC,KAAM,CACFF,SAAU,UACVC,OAAQ,aAEZE,QAAS,CACLN,MAAO,eCJjBO,EAAe,CACjBC,SAAU,CACNpB,EAAG,GACHC,EAAG,IAEPoB,KAAM,CACF1F,MAAO,GACPC,OAAQ,IAEZ0F,MAAO,CACHC,KAAM,CACF1F,MAAO,WACPF,MAAO,GACPC,OAAQ,GACR4F,KAAM,YACNC,OAAQ,QACRC,YAAa,GAEjB1F,KAAM,CACFH,MAAO,WACPW,SAAU,GACV,QAAS,GACT,QAAS,GACTmF,IAAK,OACL,cAAe,SACf,cAAe,WAGvB5E,MAAO,IAGE6E,EAAb,4MAYIC,OAAS,CAAC,CACNC,QAAS,OACTC,SAAU,QACZ,CACED,QAAS,OACTC,SAAU,UAjBlB,8CACI,WACI,OAAO,sFAEH1E,KAAM,kBACNiE,MAAO,CACHC,KAAMJ,EAAaG,MAAMC,KACzBvF,KAAMmF,EAAaG,MAAMtF,UAPzC,oBAqBI,SAAOgG,EAAQC,GACX,IAAMC,EAAUC,IAAEC,UAAUjB,GAW5B,GAVIa,IACAE,EAAQd,SAAWiB,OAAOC,OAAOJ,EAAQd,SAAUY,EAAOZ,UAC1Dc,EAAQb,KAAOgB,OAAOC,OAAOJ,EAAQb,KAAMW,EAAOX,MAClDa,EAAQZ,MAAMC,KAAOc,OAAOC,OAAOJ,EAAQZ,MAAMC,KAAMS,EAAOV,OAASU,EAAOV,MAAMC,MACpFW,EAAQZ,MAAMtF,KAAOqG,OAAOC,OAAOJ,EAAQZ,MAAMtF,KAAMgG,EAAOV,OAASU,EAAOV,MAAMtF,OAExFkG,EAAQD,MAAQA,EAIZD,EAAOO,MAAO,CACd,IAAMA,EAAQP,EAAOO,MACrBL,EAAQZ,MAAMC,KAAK5F,MAAQ4G,EAAMC,WAAWlB,MAAMC,KAAK5F,MAAQuG,EAAQZ,MAAMC,KAAK5F,MAClFuG,EAAQZ,MAAMC,KAAK3F,OAAS2G,EAAMC,WAAWlB,MAAMC,KAAK3F,OAASsG,EAAQZ,MAAMC,KAAK3F,OACpFsG,EAAQd,SAAW,CACfpB,EAAGuC,EAAMC,WAAWpB,SAASpB,GAAKkC,EAAQZ,MAAMC,KAAK5F,MAAQ4G,EAAMC,WAAWlB,MAAMC,KAAK5F,OAAS,EAClGsE,EAAGsC,EAAMC,WAAWpB,SAASnB,GAAKiC,EAAQZ,MAAMC,KAAK3F,OAAS2G,EAAMC,WAAWlB,MAAMC,KAAK3F,QAAU,GAI5G,IAAM6G,EAAM,IAAIb,EAAI,CAChBC,OAAQ,iBACRT,SAAS,eACFc,EAAQd,UAEfC,KAAK,eACEa,EAAQb,MAEfC,MAAO,CACHC,KAAK,eACEW,EAAQZ,MAAMC,MAErBvF,KAAK,eACEkG,EAAQZ,MAAMtF,MAErB0G,MAAO,GAGXT,MAAOC,EAAQD,QAYnB,GARAQ,EAAIR,MAAQC,EAAQD,MAEpBQ,EAAIE,MAAMF,EAAIR,MAAMlF,OAEpB+C,KAAK8C,SAASH,GACF,IAAII,MAAMC,GAChBC,OAEFf,GAAUA,EAAOO,MAAO,CACxB,IAAIA,EAAQP,EAAOO,MACfS,GAAY,EAChB,GAAIT,EAAMU,IAAI,UAAW,CACrB,IAAIC,EAAST,EAAIR,MAAMlF,MAAMoG,QAAQZ,EAAMU,IAAI,WAC/CC,EAAOE,QAAQb,GACfW,EAAOG,MAAMZ,GACbS,EAAOI,SACPN,GAAY,EAEhBP,EAAIY,MAAMd,GACNS,GACAP,EAAIR,MAAMsB,WAAWd,EAAKA,EAAID,WAAWlB,MAAMC,KAAK5F,MAAQ,GAIpE,OADAqB,QAAQC,IAAIwF,GACLA,IAzFf,qBA4FI,WAEI,IAFM,EAEFS,EAASpD,KAAK0D,gBACdC,EAAW3D,KAAK4D,mBAHd,cAIcD,GAJd,IAIN,2BAA8B,CAAC,IAApBlB,EAAmB,QAC1BzC,KAAKsD,QAAQb,IALX,8BAONzC,KAAK6D,SACDT,GACApD,KAAKmC,MAAM2B,iBAAiBV,GAGhCpD,KAAKmC,MAAM4B,MAAMC,qBAxGzB,oBA2GI,WAEIhE,KAAKmC,MAAM8B,aAAajE,KAAM,CAACmB,KAAKL,EAAaC,WAAWI,KAAKD,OAAQF,IAAIF,EAAaC,WAAWC,IAAIE,OAAQgD,QAASpD,EAAaC,WAAWK,QAAQN,UA7GlK,sBAgHI,WAEId,KAAKmC,MAAM8B,aAAajE,KAAM,CAACmB,KAAKL,EAAaC,WAAWI,KAAKF,SAAUD,IAAIF,EAAaC,WAAWC,IAAIC,SAAUiD,QAASpD,EAAaC,WAAWK,QAAQN,UAlHtK,4BAqHI,WACI,MAAQ,CACIjF,MAAOmE,KAAK0C,WAAWlB,MAAMC,KAAK5F,MAClCC,OAAQkE,KAAK0C,WAAWlB,MAAMC,KAAK3F,OACnCoE,EAAGF,KAAK0C,WAAWpB,SAASpB,EAC5BC,EAAGH,KAAK0C,WAAWpB,SAASnB,KA1HhD,qBA8HI,WACI,OAAOH,KAAK0C,WAAWlB,MAAMC,KAAK5F,MAAQmE,KAAK0C,WAAWlB,MAAMC,KAAK3F,SA/H7E,sBAwJI,SAASqI,GAEL,IAAIC,EAAcD,EAAQE,SAASF,EAAQhC,MAAM4B,MAAMO,QAEvDF,EAAYG,cAEZ,IAAIC,EAAe,IAAIC,IAAmBC,SAEtCC,EAAe,IAAIF,IAAmBG,OAAOC,EAAiB,CAC9D3E,EAAG,KACHC,EAAE,KACF2E,OAAQ,eAERC,EAAe,IAAIN,IAAmBG,OAAOC,EAAiB,CAC9D3E,EAAG,OACHC,EAAE,KACF2E,OAAQ,eAERE,EAAe,IAAIP,IAAmBG,OAAOC,EAAiB,CAC9D3E,EAAG,KACHC,EAAE,OACF2E,OAAQ,eAERG,EAAe,IAAIR,IAAmBG,OAAOC,EAAiB,CAC9D3E,EAAG,OACHC,EAAE,OACF2E,OAAQ,eAIZrE,IAAEkE,EAAaO,IAAIxE,GAAG,YAAayE,EAAiBC,KAAKjB,IACzD1D,IAAEsE,EAAaG,IAAIxE,GAAG,YAAayE,EAAiBC,KAAKjB,IACzD1D,IAAEuE,EAAaE,IAAIxE,GAAG,YAAayE,EAAiBC,KAAKjB,IACzD1D,IAAEwE,EAAaC,IAAIxE,GAAG,YAAayE,EAAiBC,KAAKjB,IAEzD,IAAIkB,EAAa,CAACb,EAAcG,EAAcI,EAAcE,EAAcD,GAEtEM,EAAY,IAAIb,IAAUc,UAAU,CACpCC,MAAOH,IAGXjB,EAAYtB,SAASwC,GAErBlB,EAAYqB,gBAnMpB,GAAyBhB,IAAUiB,SA2MnCnD,OAAOC,OAAOiC,EAAO,CACjB,cAAe,CACX3C,SAQR,IAAI6D,EAAW,CACXzF,EAAG,EACHC,EAAG,GAGHyF,EAAc,CACd1F,EAAG,EACHC,EAAG,GAKD0F,EACK,GADLA,EAEM,GAQZ,SAASV,EAAiBxE,GACtB,IAAMhD,EAASqC,KAAKmC,MAAMlF,MAAMoG,QAAQ5C,IAAEE,EAAMhD,QAAQyF,SAAS0C,KAAK,aACtEH,EAAW,CACPzF,EAAGS,EAAMC,QACTT,EAAGQ,EAAME,SAGbJ,IAAEpD,UAAUqD,GAAG,UAAW,CAAE/C,UAAUoI,GACtCtF,IAAEpD,UAAUqD,GAAG,YAAa,CAAE/C,SAAQqI,UAAWrF,EAAMhD,OAAOsI,aAAa,mBAAsBC,GACjGvF,EAAMwF,kBAEFxI,EAAOwF,IAAI,WACXnD,KAAKmC,MAAMlF,MAAMoG,QAAQ1F,EAAOwF,IAAI,WAAWG,QAAQ3F,GAS/D,SAASuI,EAAiBvF,GAEtBiF,EAAc,CACV1F,EAAGS,EAAMC,QACTT,EAAGQ,EAAME,SAIb,IAAMU,EACKZ,EAAMyF,KAAKzI,OAAO+E,WAAWlB,MAAMC,KAAK5F,MAD7C0F,EAEMZ,EAAMyF,KAAKzI,OAAO+E,WAAWlB,MAAMC,KAAK3F,OAI9CwF,EACCX,EAAMyF,KAAKzI,OAAO+E,WAAWpB,SAASpB,EADvCoB,EAECX,EAAMyF,KAAKzI,OAAO+E,WAAWpB,SAASnB,EAIvCkG,EAAQ,CACVnG,EAAG0F,EAAY1F,EAAIyF,EAASzF,EAC5BC,EAAGyF,EAAYzF,EAAIwF,EAASxF,GAK1BmG,EAAY,CACdC,OAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,MAAO,GAIX,OAAQ/F,EAAMyF,KAAKJ,WACf,IAAK,KACDM,EAAUC,QAAU,EACpBD,EAAUE,QAAU,EACpBF,EAAUG,MAAQ,EAClBH,EAAUI,MAAQ,EAClB,MACJ,IAAK,KACDJ,EAAUC,OAAS,EACnBD,EAAUE,QAAU,EACpBF,EAAUG,MAAQ,EAClBH,EAAUI,MAAQ,EAClB,MACJ,IAAK,KACDJ,EAAUC,QAAU,EACpBD,EAAUE,OAAS,EACnBF,EAAUG,MAAQ,EAClBH,EAAUI,MAAQ,EAClB,MACJ,IAAK,KACDJ,EAAUC,OAAS,EACnBD,EAAUE,OAAS,EACnBF,EAAUG,MAAQ,EAClBH,EAAUI,MAAQ,EAClB,MACJ,QACI,MAAM,IAAIC,WAAW,yDAA2DhG,EAAMyF,KAAKJ,WAI/FzE,EAAa+E,EAAUC,OAASF,EAAMnG,EAAI2F,IAAgBQ,EAAMnG,EAAI,GACpEqB,EAAc+E,EAAUE,OAASH,EAAMlG,EAAI0F,IAAiBQ,EAAMlG,EAAI,GAG1EQ,EAAMyF,KAAKzI,OAAOmI,KAAK,aAAevE,EAAa+E,EAAUC,OAASF,EAAMnG,GAC5ES,EAAMyF,KAAKzI,OAAOmI,KAAK,cAAevE,EAAc+E,EAAUE,OAASH,EAAMlG,GAG7EQ,EAAMyF,KAAKzI,OAAOiJ,IAAI,WAAa,CAAE1G,EAAGoB,EAAagF,EAAUG,MAAQJ,EAAMnG,EAAGC,EAAGmB,EAAagF,EAAUI,MAAQL,EAAMlG,IAGxHwF,EAAWpD,OAAOC,OAAO,GAAIoD,GAQjC,SAASG,EAAgBpF,GACrBF,IAAEpD,UAAUwJ,IAAI,UAAWd,GAC3BtF,IAAEpD,UAAUwJ,IAAI,YAAaX,GAC7BvF,EAAMyF,KAAKzI,OAAOwE,MAAM2B,iBAAiBnD,EAAMyF,KAAKzI,QAGxD,SAASkH,EAAiB3C,GACtB,IAAI4E,EAAK5E,GAAUA,EAAO4E,GAAM,EAC5BpF,EAAQQ,GAAUA,EAAOR,MAAS,cAClCxB,EAAKgC,GAAUA,EAAOhC,GAAM,KAC5BC,EAAK+B,GAAUA,EAAO/B,GAAM,KAC5B4G,EAAU7E,GAAUA,EAAO6E,QAAW,CAAC7G,EAAG,EAAGC,EAAE,GAC/C2E,EAAU5C,GAAUA,EAAO4C,QAAW,YAkB1C,MAhBiB,CACb/C,OAAQ,CAAC,CACLC,QAAS,SACTC,SAAU,SACVS,WAAY,CACR,EAAKoE,EACL,KAAQpF,EACR,OAAUoD,EACV,iBAAkBA,EAAOkC,UAAU,EAAE,MAG7C9G,EAAGA,EACHC,EAAGA,EACH4G,OAAQA,EACRE,QAAQ,G,UClZVC,EAAmB,CACvB5F,SAAU,CACRpB,EAAG,GACHC,EAAG,IAELoB,KAAM,CACJ1F,MAAO,GACPC,OAAQ,IAEV0F,MAAO,CACLC,KAAM,CACJ1F,MAAO,eACPF,MAAO,GACPC,OAAQ,GACR4F,KAAM,YACNC,OAAQ,QACRC,YAAa,GAEf1F,KAAM,CACJH,MAAO,eACPG,KAAM,IACNQ,SAAU,GACV,QAAS,GACT,QAAS,GACTmF,IAAK,OACL,cAAe,SACf,cAAe,WAGnB5E,MAAO,IAGIkK,EAAb,4MAYIpF,OAAS,CAAC,CACNC,QAAS,OACTC,SAAU,QACZ,CACED,QAAS,OACTC,SAAU,UAjBlB,8CACI,WACI,OAAO,sFAEH1E,KAAM,sBACNiE,MAAO,CACHC,KAAMyF,EAAiB1F,MAAMC,KAC7BvF,KAAMgL,EAAiB1F,MAAMtF,UAP7C,oBAqBI,SAAOgG,EAAQC,EAAOiF,GAClB,IAAMhF,EAAUC,IAAEC,UAAU4E,GAExBhF,IACFE,EAAQd,SAAWiB,OAAOC,OAAOJ,EAAQd,SAAUY,EAAOZ,UAC1Dc,EAAQb,KAAOgB,OAAOC,OAAOJ,EAAQb,KAAMW,EAAOX,MAClDa,EAAQZ,MAAMC,KAAOc,OAAOC,OAAOJ,EAAQZ,MAAMC,KAAMS,EAAOV,OAASU,EAAOV,MAAMC,MACpFW,EAAQZ,MAAMtF,KAAOqG,OAAOC,OAAOJ,EAAQZ,MAAMtF,KAAMgG,EAAOV,OAASU,EAAOV,MAAMtF,OAEtFkG,EAAQD,MAAQA,EAEhB,IAAM+B,EAAU,IAAIiD,EAAQ,CAC1BpF,OAAQ,0CACRT,SAAS,eACFc,EAAQd,UAEfC,KAAK,eACEa,EAAQb,MAEfC,MAAO,CACHC,KAAK,eACEW,EAAQZ,MAAMC,MAErBvF,KAAK,eACEkG,EAAQZ,MAAMtF,MAErB0G,MAAO,KAab,OAPAsB,EAAQ/B,MAAQC,EAAQD,MAExB+B,EAAQrB,MAAMqB,EAAQ/B,MAAMlF,OAGxBmK,GAAMpH,KAAK8C,SAASoB,GAEjBA,IA5Df,qBA+DI,WACElE,KAAK6D,SACL7D,KAAKmC,MAAM4B,MAAMC,qBAjEvB,oBAoEI,cApEJ,sBAwEI,cAxEJ,4BA4EI,WACE,MAAQ,CACEnI,MAAOmE,KAAK0C,WAAWlB,MAAMC,KAAK5F,MAClCC,OAAQkE,KAAK0C,WAAWlB,MAAMC,KAAK3F,OACnCoE,EAAGF,KAAK0C,WAAWpB,SAASpB,EAC5BC,EAAGH,KAAK0C,WAAWpB,SAASnB,KAjF5C,qBAqFI,WACE,OAAOH,KAAK0C,WAAWlB,MAAMC,KAAK5F,MAAQmE,KAAK0C,WAAWlB,MAAMC,KAAK3F,SAtF3E,sBA+GI,SAASqI,GAEP,IAAIC,EAAcD,EAAQE,SAASF,EAAQhC,MAAM4B,MAAMO,QAEvDF,EAAYG,cAEZ,IAEIc,EAAa,CAFE,IAAIZ,IAAmBC,UAItCY,EAAY,IAAIb,IAAUc,UAAU,CACpCC,MAAOH,IAGXjB,EAAYtB,SAASwC,GAErBlB,EAAYqB,gBA/HlB,GAA6BhB,IAAUiB,SCpBhC,SAAS2B,EAASC,EAAMC,GAE3B,IAAIC,EACQF,EAAKpH,EADbsH,EAESF,EAAKpH,EAAIoH,EAAKzL,MAFvB2L,EAGOF,EAAKnH,EAHZqH,EAIUF,EAAKnH,EAAImH,EAAKxL,OAExB2L,EACQF,EAAUrH,EADlBuH,EAESF,EAAUrH,EAAIqH,EAAU1L,MAFjC4L,EAGOF,EAAUpH,EAHjBsH,EAIUF,EAAUpH,EAAIoH,EAAUzL,OAEtC,OAAI0L,EAAmBC,GAAyBD,EAAoBC,GAA0BD,EAAkBC,GAAwBD,EAAqBC,EAQ1J,SAASC,EAAc/J,EAAQgK,GAClC,IADyC,EACrCC,EAAkB,GADmB,cAEtBD,GAFsB,IAEzC,2BAA0B,CAAC,IAAhBE,EAAe,QAClBlK,EAAOjC,KAAOmM,EAAKnM,KACnBoM,EAAWnK,EAAOoK,iBAAkBF,EAAKE,mBACzCH,EAAgBI,KAAKH,KALY,8BAQzC,OAAOD,EAGJ,SAASE,EAAWG,EAAUV,GACjC,SAAIF,EAASY,EAAUV,KAAcF,EAASE,EAAWU,OAUrDA,EAAS9H,EAAI8H,EAASnM,OAASyL,EAAUpH,GAAKoH,EAAUpH,EAAIoH,EAAUzL,OAASmM,EAAS9H,MAQxF8H,EAAS/H,EAAI+H,EAASpM,MAAQ0L,EAAUrH,GAAKqH,EAAUrH,EAAIqH,EAAU1L,MAAQoM,EAAS/H,GDwG9FqC,OAAOC,OAAOiC,SAAc,CACxB,cAAe,CACX0C,aE/KO,UAA0B,gCCAlC,SAASe,EAAYL,EAAMM,GAAM,IAAD,gBACnBA,GADmB,IACnC,2BAAqB,CAAC,IAAXC,EAAU,QACjB,GAAIP,EAAKnM,KAAO0M,EAAE1M,GACd,OAAO,GAHoB,8BAMnC,OAAO,ECMX,IAAM2M,EAAY5D,IAAUiB,QAAQ4C,OAAO,oBAAoBnB,GACzDoB,EAAQ9D,IAAUiB,QAAQ4C,OAAO,gBAAgBxG,GAEjD0G,EAA4B,CAC9BrH,KAAML,EAAaC,WAAWI,KAAKF,SACnCD,IAAKF,EAAaC,WAAWC,IAAIC,SACjCiD,QAASpD,EAAaC,WAAWK,QAAQN,OAGxB2H,E,WACjB,WAAY1E,GAAQ,oBAChB/D,KAAK+D,MAAQA,EACb/D,KAAK0I,gBAAkB3E,EAAMxI,MAAMmN,gBACnC1I,KAAK/C,MAAQ,IAAIwH,IAAUkE,MAAM,GAAI,CACjCC,cAAe,CACXC,UAAW,CACP1B,QAASkB,EACTvG,IAAKyG,MAIjBvI,KAAK8I,QAAU,G,8CAGnB,SAAW5G,EAAQ6G,GAAmB,IAAb3B,EAAY,wDAC3BlD,GAAW,IAAIiD,GAAW6B,OAAO9G,EAAQlC,KAAMoH,GACrDpH,KAAK8D,iBAAiBI,GAGtB,IAAI+E,EAAM,IAAIlG,MAAMmG,GAGpB,OAFAlJ,KAAK0I,gBAAgBO,GAEd/E,I,oBAGX,SAAOhC,GACH,IAAMS,GAAO,IAAIb,GAAOkH,OAAO9G,EAAQlC,MACvCA,KAAK8D,iBAAiBnB,GAGtB,IAAIwG,EAAO,IAAIpG,MAAMC,GAErB,OADAhD,KAAK0I,gBAAgBS,GACdxG,I,yBAGX,SAAYgF,GAAQ,IAAD,OACTyB,EAAUzB,EAAM9H,KAAI,SAAAgI,GAGtB,OAFAA,EAAOA,EAAKwB,SACPlH,MAAQ,EACN0F,KAEX7H,KAAK/C,MAAMqM,WAAWF,GANP,oBAQCA,GARD,IAQf,IAAI,EAAJ,qBAAwB,CAAC,IAAjBvB,EAAgB,QACpB7H,KAAK8D,iBAAiB+D,IATX,iC,0BAanB,WACI,IACM0B,EADQvJ,KAAK/C,MAAMuM,WACF3J,KAAI,SAAAgI,GAAI,OAAItF,OAAOC,OAAOqF,EAAKnF,WAAY,CAAEP,MAAO,UAE3E,OADa5D,KAAKQ,UAAUwK,EAAU,KAAM,K,4BAKhD,SAAeE,GACX,IADiB,EACXC,EAASnL,KAAKC,MAAMiL,GADT,cAEAC,GAFA,IAEjB,2BAAyB,CAAC,IAAjB7B,EAAgB,QACjB8B,OAAW,EACf,GAAkB,wBAAd9B,EAAKtK,KACLoM,EAAc3J,KAAK4J,WAAW/B,GAAM,GAAM,OAEzC,IAAkB,oBAAdA,EAAKtK,KAIV,MAAM,IAAIoJ,WAAJ,+EAAuFkB,EAAKtK,OAHlGoM,EAAc3J,KAAK6J,OAAOhC,GAAM,GAAM,GAO1C,IAAMiC,EAAcrJ,IAAE,kBAAD,OAAmBkJ,EAAYjH,WAAWhH,GAA1C,OACrBoO,EAAYC,QAAQ,cACpBD,EAAYC,QAAQ,eAjBP,iC,8BAwBrB,SAAiBlC,GACb3K,QAAQC,IAAI,mEAKZ,IAAI6M,EAAWnC,EAAKE,iBAGhB3E,EH/GL,SAA0BuE,GAE7B,GAAqB,IAAjBA,EAAMsC,OAAV,CACA,IAHoC,EAGhCC,EAAgBvC,EAAM,GAAGjF,WAAWlB,MAAMC,KAAK5F,MAAQ8L,EAAM,GAAGjF,WAAWlB,MAAMC,KAAK3F,OACtFqO,EAAgBxC,EAAM,GAJU,cAKjBA,GALiB,IAKpC,2BAA0B,CAAC,IAAhBE,EAAe,QAGlBuC,EAFQvC,EAAKnF,WAAWlB,MAAMC,KAAK5F,MAC1BgM,EAAKnF,WAAWlB,MAAMC,KAAK3F,OAEpCsO,EAAOF,IACPA,EAAgBE,EAChBD,EAAgBtC,IAXY,8BAcpC,OAAOsC,GGiGUE,CADWrK,KAAKsK,qBAAqBN,IAGlD,GAAI5G,EAAQ,CACR,IAAIO,EAAW3D,KAAKuK,eAAenH,EAAQ4G,GAE3C5G,EAAOG,MAAMsE,GAHL,oBAMYlE,GANZ,IAMR,2BAA8B,CAAC,IAApBlB,EAAmB,QACtBA,EAAMU,IAAI,WACVC,EAAOE,QAAQb,GAEnBoF,EAAKtE,MAAMd,IAVP,8BAYRzC,KAAKwK,YAAYpH,OACd,CACH,IADG,EACCqH,EAAkBzK,KAAK0K,mBAAmBV,GAD3C,cAEmBS,GAFnB,IAEH,2BAAuC,CAAC,IAA7BtG,EAA4B,QAC/BA,EAAQhB,IAAI,WAAagB,EAAQzI,KAAOmM,EAAKnM,IAGjDmM,EAAKtE,MAAMY,IANZ,8BAQHnE,KAAKwK,YAAY3C,GAGrB7H,KAAKiE,aAAa4D,GAClB7H,KAAK2K,KAAK9C,GACV7H,KAAK4K,kB,kBAGT,SAAK/C,GACD,IAAIgD,EAAO7K,KAAK8K,SAASjD,GACzB3K,QAAQC,IAAI,cAAe0N,EAAKjH,oBAChC5D,KAAK+K,SAASF,K,sBAGlB,SAAShD,GAEL,IAAImD,EAAWnD,EAAKjE,mBAEpB,GADA1G,QAAQC,IAAI,WAAY6N,GACA,IAApBA,EAASf,OAAb,CAJW,oBAOSe,GAPT,IAOX,2BAA8B,CAAC,IAApBvI,EAAmB,QAC1BzC,KAAK+K,SAAStI,IARP,8BAYXzC,KAAK4K,cAAcI,GACnB,IAAIC,EHcL,SAA6BtD,GAKhC,IAJA,IAAIuD,EAAQvD,EAAM,GAAGjF,WAAWpB,SAASpB,EACrCiL,EAAQxD,EAAM,GAAGjF,WAAWlB,MAAMC,KAAK5F,MAAQqP,EAC/CE,EAAQzD,EAAM,GAAGjF,WAAWpB,SAASnB,EACrCkL,EAAQ1D,EAAM,GAAGjF,WAAWlB,MAAMC,KAAK3F,OAASsP,EAC3CE,EAAI,EAAGA,EAAI3D,EAAMsC,OAAQqB,IAAK,CACnC,IACItB,EADOrC,EAAM2D,GACGvD,iBAChBiC,EAAS9J,EAAIgL,IAAOA,EAAQlB,EAAS9J,GACrC8J,EAAS7J,EAAIiL,IAAOA,EAAQpB,EAAS7J,GACrC6J,EAAS9J,EAAI8J,EAASnO,MAAQsP,IAAOA,EAAQnB,EAAS9J,EAAI8J,EAASnO,OACnEmO,EAAS7J,EAAI6J,EAASlO,OAASuP,IAAOA,EAAQrB,EAAS7J,EAAI6J,EAASlO,QAE5E,MAAO,CACHoE,EAAGgL,EACH/K,EAAGiL,EACHvP,MAAOsP,EAAQD,EACfpP,OAAQuP,EAAQD,GG/BGG,CAAoBP,GACnChB,EAAWnC,EAAKE,iBACpB,IAAKV,EAAS2C,EAAUiB,GAAe,CACnC,IAAKnD,EAAWkC,EAAUiB,GAAe,QACrCA,EAAa/K,EAAI8J,EAAS9J,GAAK+K,EAAa/K,EAAI+K,EAAapP,MAAQmO,EAAS9J,EAAI8J,EAASnO,SAC3FgM,EAAKvG,SAAS2J,EAAa/K,EAAIF,KAAK8I,QAASjB,EAAKnF,WAAWpB,SAASnB,GACtE0H,EAAK/B,KAAK,aAAcmF,EAAapP,MAAQ,EAAImE,KAAK8I,WAEtDmC,EAAa9K,EAAI6J,EAAS7J,GAAK8K,EAAa9K,EAAI8K,EAAanP,OAASkO,EAAS7J,EAAI6J,EAASlO,UAC5F+L,EAAKvG,SAASuG,EAAKnF,WAAWpB,SAASpB,EAAG+K,EAAa9K,EAAIH,KAAK8I,SAChEjB,EAAK/B,KAAK,cAAemF,EAAanP,OAAS,EAAIkE,KAAK8I,c,2BAKpE,WAAgD,IAAlC0C,EAAiC,uDAAzBxL,KAAKyL,gBAAgB,GAGvCD,EAAME,MAAK,SAAS1M,EAAG2M,GACnB,OAAOA,EAAEC,UAAY5M,EAAE4M,aAG3B,IADA,IAAIC,EAAUL,EACPK,EAAQ5B,OAAS,GAAG,CACvB,IADuB,EACnB6B,EAAO,GADY,cAGJD,GAHI,IAGvB,2BAA4B,CAAC,IAAD,EAAjBhE,EAAiB,QACpBkE,EAAWrE,EAAcG,EAAM2D,GADX,cAGFO,GAHE,IAGxB,2BAAgC,CAAC,IAAtBC,EAAqB,QAC5BhM,KAAKiM,SAASpE,EAAMmE,GACpB,IAAIE,EAAOhE,EAAY8D,EAASF,GAC3BI,GAAMJ,EAAK9D,KAAKgE,IAND,gCAHL,8BAYvBH,EAAUC,K,sBAIlB,SAASK,EAAMH,GAGX,IAAI/D,EAAWkE,EAAKpE,iBAChBqE,EAAcJ,EAAQjE,iBAKtBsE,EAAYpE,EAAS/H,EAAIkM,EAAYlM,EAAK+H,EAAS/H,EAAI+H,EAASpM,MAAQuQ,EAAYlM,EAAI+H,EAAS/H,EAAIkM,EAAYlM,EAAIkM,EAAYvQ,MACjIyQ,EAAYrE,EAAS9H,EAAIiM,EAAYjM,EAAK8H,EAAS9H,EAAI8H,EAASnM,OAASsQ,EAAYjM,EAAI8H,EAAS9H,EAAIiM,EAAYjM,EAAIiM,EAAYtQ,OAEtI,GAAIyQ,KAAKC,IAAIH,GAAYE,KAAKC,IAAIF,GAAW,CAGzC,IAAIG,EAAMF,KAAKG,KAAKJ,GACR,IAARG,IAAWA,EAAM,GACrBzM,KAAK2M,SAASX,EAAS,CAAC9L,EAAGkM,EAAYlM,EAAGC,EAAGiM,EAAYjM,EAAImM,EAAYtM,KAAK8I,QAAU2D,QACrF,CAGH,IAAIA,EAAMF,KAAKG,KAAKL,GACR,IAARI,IAAWA,EAAM,GACrBzM,KAAK2M,SAASX,EAAS,CAAC9L,EAAGkM,EAAYlM,EAAImM,EAAYrM,KAAK8I,QAAU2D,EAAMtM,EAAGiM,EAAYjM,O,6BAKnG,SAAgByC,GAEZ,IAFmB,EAEf+E,EAAQ3H,KAAK/C,MAAMuM,WACnBrL,EAAS,GAHM,cAIAwJ,GAJA,IAInB,2BAA0B,CAAC,IAAhBE,EAAe,QAClBA,EAAKnF,WAAWlB,MAAMoB,QAAUA,GAAOzE,EAAO6J,KAAKH,IALxC,8BAOnB,OAAO1J,I,gCAGX,SAAmBmJ,GAAoC,IAAD,EAA7BK,EAA6B,uDAAvB3H,KAAK/C,MAAMuM,WASlCoD,EAAW,GATmC,cAU/BjF,GAV+B,IAUlD,2BAA0B,CAAC,IAAhBE,EAAe,QAClBN,EAAYM,EAAKE,iBACjBV,EAASC,EAAMC,IACfqF,EAAS5E,KAAKH,IAb4B,8BAgBlD,OAAO+E,I,kCAIX,SAAqBC,GAGjB,IAH6B,EAGzBlF,EAAQ3H,KAAK/C,MAAMuM,WACnBsD,EAAoB,GAJK,cAKVnF,GALU,IAK7B,2BAA0B,CAAC,IAAhBE,EAAe,QAGlBR,EAFYQ,EAAKE,iBAEG8E,IAEpBC,EAAkB9E,KAAKH,IAVF,8BAc7B,OAAOiF,I,4BAIX,SAAe1J,EAAQ2J,GAEnB,IAFmC,EAE/BpF,EAAQ3H,KAAK/C,MAAMuM,WACnBwD,EAAqB,GAHU,cAIhBrF,GAJgB,IAInC,2BAA0B,CAAC,IAAhBE,EAAe,QAChBA,EAAK1E,IAAI,WAAc0E,EAAK1E,IAAI,YAAcC,EAAO1H,IACvDsR,EAAmBhF,KAAKH,IANG,8BAUnC,OADe7H,KAAK0K,mBAAmBqC,EAAgBC,K,yBAI3D,SAAYnC,GAKR,IAFA,IAAIgB,EAAU,CAAChB,GACXiB,EAAO,GACJD,EAAQ5B,OAAS,GAAG,CAAC,IAAD,gBACJ4B,GADI,IACvB,2BAA4B,CAAC,IAAD,EAAjBoB,EAAiB,QAExBA,EAAKC,UACL,IAAIvJ,EAAWsJ,EAAKrJ,oBACpB,EAAAkI,GAAK9D,KAAL,oBAAarE,KALM,8BAOvBkI,EAAUC,EACVA,EAAO,M,yBAOf,SAAYqB,EAAU7L,GAA4B,IAAlB8L,EAAiB,uDAAN,KACnCvC,EAAOsC,EAAS5K,OAAOnC,KAAK+M,GAAU,IACtCE,EAAaxC,EAAKxB,QAClBiE,EAAWtN,KAAKuN,gBAAgB1C,EAAMwC,EAAYF,GAMtD,OALAnN,KAAK2M,SAASW,EAAUhM,GACpB8L,GAAyC,oBAA7BA,EAAS1K,WAAWnF,MAChC6P,EAAS7J,MAAM+J,GAEnBtN,KAAK8D,iBAAiBwJ,GACfD,EAAW3R,K,6BAGtB,SAAgBuR,EAAM5D,EAAO8D,GAAwB,IAAd/J,EAAa,uDAAN,KAC1CiG,EAAMlH,MAAQnC,KACdqJ,EAAMxG,MAAM7C,KAAK/C,OACH,MAAVmG,GACAA,EAAOG,MAAM8F,GAEjB,IAAImE,EAASP,EAAK9J,IAAI,UACtB,GAAIqK,EAAO,CAAC,IAAD,gBACaA,GADb,IACP,2BAA4B,CAAC,IAAlBjK,EAAiB,QACpBd,EAAQzC,KAAKyN,mBAAmBlK,EAAO4J,GAC3CnN,KAAKuN,gBAAgB9K,EAAOA,EAAM4G,QAAS8D,EAAU9D,IAHlD,+BAMX,OAAOA,I,gCAGX,SAAmB3N,EAAIyR,GAEnB,IADA,IACA,MADW5K,OAAOnC,KAAK+M,GACvB,eAAwB,CAAnB,IACGtF,EAAOsF,EADD,MAEV,GAAItF,EAAKnM,KAAOA,EACZ,OAAOmM,EAIf,OADAnJ,MAAM,yBACC,O,wBAQX,SAAWmM,GAGP,IAHsD,IAAzC6C,EAAwC,uDAAzB,GAAIC,IAAqB,yDAEjD9B,EAAUhB,EAAKnH,gBACZmI,GACHA,EAAQ/F,KAAK,aAAc+F,EAAQnJ,WAAWlB,MAAMC,KAAK5F,MAAQ6R,GACjE7B,EAAQ/F,KAAK,cAAe+F,EAAQnJ,WAAWlB,MAAMC,KAAK3F,OAAS4R,GAC/DC,GACA9B,EAAQjF,IAAI,WAAY,CAAC1G,EAAG2L,EAAQnJ,WAAWpB,SAASpB,EAAIwN,EAAa,EAChDvN,EAAG0L,EAAQnJ,WAAWpB,SAASnB,EAAIuN,EAAa,IAE7E7B,EAAUA,EAAQnI,kB,sBAI1B,SAASuJ,GACL,KACQA,EAAK9J,IAAI,WACT8J,EAAOA,EAAKvJ,gBAKpB,OAAOuJ,I,uBAGX,SAAUA,GAGN,IAFA,IAAIrK,EAAQ,EACRQ,EAAS6J,EAAKvJ,gBACXN,GACHR,IACAQ,EAASA,EAAOM,gBAEpB,OAAOd,I,0BAGX,SAAaqK,GAAiD,IAA3CW,EAA0C,uDAA3BpF,EAE1BqC,EAAO7K,KAAK8K,SAASmC,GAGzB,GAFApC,EAAK/E,KAAK,QAAS,GAEU,wBAAzB+E,EAAKnI,WAAWnF,KAApB,CAKAsN,EAAK/E,KAAK,YAAa8H,EAAa5M,KAGpC,IAFA,IAAI4B,EAAQ,EACRe,EAAWkH,EAAKjH,mBACdD,EAASsG,OAAS,GAAG,CAGvB,IAHuB,EAGnB4D,KAFJjL,EAEoB,GAAK,EACrBkL,EAAgB,GAJG,cAKHnK,GALG,IAKvB,2BAA8B,CAAC,IAApBlB,EAAmB,QAC1BA,EAAMqD,KAAK,QAASlD,GACU,wBAA1BH,EAAMC,WAAWnF,MAKrBkF,EAAMC,WAAWlB,MAAMoB,MAAQA,EAChB,IAAXiL,EACApL,EAAMqD,KAAK,YAAa8H,EAAazM,MAErCsB,EAAMqD,KAAK,YAAa8H,EAAa5M,KAEzC8M,EAAc9F,KAAd,MAAA8F,EAAa,YAASrL,EAAMmB,sBAVxBnB,EAAMqD,KAAK,YAAa8H,EAAa1J,UARtB,8BAoBvBP,EAAWmK,QA3BXjD,EAAK/E,KAAK,YAAa8H,EAAa1J,W,sBAgC5C,SAAS2G,EAAMvJ,GAOX,IANA,IAAIyF,EACGzF,EAASpB,EAAI2K,EAAKnI,WAAWpB,SAASpB,EADzC6G,EAEGzF,EAASnB,EAAI0K,EAAKnI,WAAWpB,SAASnB,EAEzC0L,EAAU,GACVC,EAAO,CAACjB,GACLiB,EAAK7B,OAAS,GAAG,CACpB4B,EAAUC,EACVA,EAAO,GAFa,oBAGDD,GAHC,IAGpB,2BAA4B,CAAC,IAAD,EAAjBoB,EAAiB,SACxB,EAAAnB,GAAK9D,KAAL,oBAAaiF,EAAKrJ,qBAGlBqJ,EAAK3L,SAAS2L,EAAKvK,WAAWpB,SAASpB,EAAI6G,EAAUkG,EAAKvK,WAAWpB,SAASnB,EAAI4G,IAPlE,oC,aC3aXgH,G,wDACjB,WAAYxS,GAAQ,IAAD,8BACf,cAAMA,IAED+I,OAAS,KACd,EAAKnC,MAAQ,IAAIsG,EAAJ,gBAJE,E,sDAOnB,SAAmBuF,EAAWC,GACvBjO,KAAKzE,MAAM2S,MAAQlO,KAAKzE,MAAM4S,MAAO,IACpCnO,KAAKmC,MAAMiM,YAAYpO,KAAKzE,MAAMoM,OAClC3H,KAAKsE,OAAO+J,uB,+BAIpB,WACIrO,KAAKsE,OAAS,IAAIG,IAAU6J,MAAM,CAC9BpJ,GAAI7H,SAASkR,eAAevO,KAAKzE,MAAMG,IACvC8S,MAAOxO,KAAKmC,MAAMlF,MAClBpB,MAAO,IACPC,OAAQ,IACR2S,oBAAoB,EACpBC,eAAgB,IAGpB1O,KAAKmC,MAAMiM,YAAYpO,KAAKzE,MAAMoM,OAClC3H,KAAKsE,OAAO+J,oBACZrO,KAAKsE,OAAOqK,cAEZ3O,KAAKsE,OAAOsK,kBAAiB,GAE7BnO,IAAE,IAAD,OAAKT,KAAKzE,MAAMG,KAAMgF,GAAG,aAAa,WACnCD,IAAET,MAAM6O,QAAQ,iBAAiBC,SAAS,uBAI9CrO,IAAE,IAAD,OAAKT,KAAKzE,MAAMG,KAAMgF,GAAG,YAAY,WAClCD,IAAET,MAAM6O,QAAQ,iBAAiBE,YAAY,yB,qBAIrD,c,oBAIA,WACI,IAAM3S,EAAQ,CACV4S,gBAAiBhP,KAAKzE,MAAM2F,OAAS,UAAY,IAErD,OACI,qBAAKnF,MAAM,eAAcK,MAAOA,EAAhC,SACQ,qBACIV,GAAIsE,KAAKzE,MAAMG,GACfK,MAAM,iCACNS,QAASwD,KAAKzE,MAAMiB,gB,GAtDHyS,IAAMC,YCG1BC,G,kDACjB,WAAY5T,GAAQ,IAAD,8BACf,cAAMA,IAeV6T,WAAa,SAAClB,GACV,EAAKmB,SAAS,CACVC,MAAOpB,IAEX,EAAK3S,MAAMgU,kBAAkB,EAAKC,QAAQtB,KAjB1C,EAAKuB,SAAW,KAEhB,EAAKC,YAAa,EAClB,EAAKC,aAAc,EACnB,EAAKC,QAAS,EAGd,EAAKC,MAAQ,CACTzJ,KAAM,GACNkJ,MAAO,GAZI,E,yCAuBnB,SAAMQ,GACF9P,KAAKqP,SAAS,CACVjJ,KAAM,GACNkJ,MAAO,GACRQ,GAAYA,K,kBAGnB,SAAKC,GACD,IAAG/P,KAAK4P,OAER,GAAG5P,KAAK0P,WACJ1P,KAAK2P,YAAcI,MADvB,CAKA,IAAM3J,EAAI,YAAOpG,KAAK6P,MAAMzJ,MAExBpG,KAAK6P,MAAMP,QAAUtP,KAAK6P,MAAMzJ,KAAK6D,OAAS,GAE9C7D,EAAK4J,OAAOhQ,KAAK6P,MAAMP,MAAQ,GAGnClJ,EAAK4B,KAAK+H,GAEN3J,EAAK6D,QAAUjK,KAAKyP,UACpBrJ,EAAK6J,QAGTjQ,KAAKqP,SAAS,CACVjJ,KAAMA,EACNkJ,MAAOlJ,EAAK6D,OAAS,O,kBAI7B,WACI,IAAIqF,EAAQtP,KAAK6P,MAAMP,MACvB,OAAItP,KAAK6P,MAAMP,MAAQ,IACnBtP,KAAKqP,SAAS,CACVC,MAAOtP,KAAK6P,MAAMP,MAAQ,IAE9BA,GAAS,EACFtP,KAAKwP,QAAQF,M,kBAK5B,WACI,IAAIA,EAAQtP,KAAK6P,MAAMP,MACvB,OAAItP,KAAK6P,MAAMP,MAAQtP,KAAK6P,MAAMzJ,KAAK6D,OAAS,IAC5CjK,KAAKqP,SAAS,CACVC,MAAOtP,KAAK6P,MAAMP,MAAQ,IAE9BA,GAAS,EACFtP,KAAKwP,QAAQF,M,qBAK5B,SAAQA,GACJ,OAAOtP,KAAK6P,MAAMzJ,KAAKkJ,K,kBAG3B,WACItP,KAAK4P,QAAS,I,oBAGlB,WACI5P,KAAK4P,QAAS,I,wBAGlB,WACI5P,KAAK0P,YAAa,EAClB1P,KAAK2P,YAAc,O,sBAGvB,WACI3P,KAAK0P,YAAa,EACO,OAArB1P,KAAK2P,aACL3P,KAAKgI,KAAKhI,KAAK2P,e,oBAIvB,WAAU,IAAD,OACL,OACI,qBAAK5T,MAAM,UAAX,SAEQiE,KAAK6P,MAAMzJ,KAAKvG,KAAI,SAACqQ,EAAchC,GAAf,OACP,IAARA,EAAc,KACf,cAAC,EAAD,CACIA,IAAKA,EACLC,MAAO,EAAK0B,MAAMzJ,KAAK6D,OACvBvO,GAAI,EAAKH,MAAM4U,UAAYjC,EAC3BvG,MAAOuI,EACPhP,OAAQ,EAAK2O,MAAMP,QAAUpB,EAC7B1R,QAAS,EAAK4S,WAAWhK,KAAK,EAAM8I,IAC/BA,Y,GAvHIe,IAAMC,WCJtBkB,I,8DACjB,WAAY7U,GAAQ,IAAD,8BACf,cAAMA,IAOV8U,mBAAqB,SAACnC,GAClB,EAAKmB,SAAS,CACVnO,OAAQgN,IAAQ,EAAK2B,MAAM3O,QAAU,EAAIgN,KAP7C,EAAK2B,MAAQ,CACT3O,QAAS,GAJE,E,0CAcnB,WAAU,IAAD,OACL,OACI,qBAAKnF,MAAM,gBAAX,SAMQkT,IAAMqB,SAASzQ,IAAIG,KAAKzE,MAAMoI,UAAU,SAAClB,EAAOyL,GAC5C,OAAIe,IAAMsB,eAAe9N,GACdwM,IAAMuB,aAAa/N,EAAO,CAC7BvB,OAAQ,EAAK2O,MAAM3O,SAAWgN,EAC9BmC,mBAAoB,EAAKA,mBAAmBjL,KAAK,EAAM8I,KAGxDzL,W,GA9BMwM,IAAMC,YCS5BuB,GAXK,SAAClV,GACjB,OACI,sBAAKQ,MAAM,qBAAX,UACI,cAAC,IAAD,CAAiB2U,KAAMnV,EAAMmV,KAAMpU,UAAU,qBAAqBE,QAASjB,EAAM8U,qBACjF,qBAAKtU,MAAK,gCAA2C,IAAjBR,EAAM2F,OAAmB,kBAAoB,IAAjF,SACK3F,EAAMoI,e,SCQjBgN,GAAsB,IAAtBA,GAAoC,IAErBrC,G,kDACjB,WAAY/S,GAAQ,IAAD,8BACf,cAAMA,IAqCVgU,kBAAoB,SAAC5H,GACjB,EAAKiJ,QAAQ/E,QAAQgF,OACrB,EAAK1O,MAAMiM,YAAYzG,GACvB,EAAKiJ,QAAQ/E,QAAQiF,UAzCN,EAuKnB9M,iBAAmB,WACf,EAAK+M,iBAxKU,EA2KnBvU,QAAU,WACNU,QAAQC,IAAI,UAAZ,iBA5Ke,EA+KnB6T,QAAU,SAACrQ,GACJA,EAAMsQ,UAAY,EAAKC,sBAAqB,EAAKC,kBAAmB,IAhLxD,EAmLnBC,UAAY,SAACzQ,GACT,GAAsB,UAAnB,EAAK0Q,UAAR,CAWA,GAPsB,WAAnB,EAAKA,WACAtR,EAAEK,KAAK,KACP,EAAKkE,OAAOsK,kBAAiB,GAKf,IAAlBjO,EAAMsQ,QAAe,CACrB,GAAI,EAAKK,iBAAkB,CACvB,IAAIC,EAAe,IAAIxO,MAAMyO,GACiB,wBAA1C,EAAKF,iBAAiB5O,WAAWnF,MAGgB,oBAA1C,EAAK+T,iBAAiB5O,WAAWnF,MAFxC,EAAK+T,iBAAiBG,UACtB,EAAKlW,MAAMmN,gBAAgB6I,IAK3BrU,QAAQwU,MAAM,8CAAgD,EAAKJ,iBAAiB5O,WAAWnF,MAGvG,EAAK+T,iBAAmB,KAI5B,IAAMhR,EAAMK,EAAML,IAAIqR,oBAChBC,EAAOtR,EAAIuR,WAAW,GAC5B,GAAI,EAAKV,kBAAmC,IAAf7Q,EAAI2J,SAAkBtJ,EAAMmR,UAAWnR,EAAMoR,SAAYH,GAAQ,IAAMA,GAAQ,GAAI,CAC5G,IAAI1P,EAAS,CAETV,MAAM,CACFtF,KAAM,CACFA,KAAMoE,IAGdgB,SAAU,EAAK0Q,uBAInB,EAAK7P,MAAMyH,WAAW1H,GACtB,EAAKiP,kBAAmB,EACxB,EAAKD,oBAAsBU,EAI/B,GAAsB,KAAlBjR,EAAMsQ,QAAgB,CACtB,IAAI/O,EAAS,CACTZ,SAAU,EAAK0Q,uBAEnB,GAAI,EAAKV,iBACLpP,EAAM,MAAY,EAAKoP,iBACvB,EAAKnP,MAAM0H,OAAO3H,QAGF,EAAKC,MAAM0H,OAAO3H,GAY1C,GAPsB,KAAlBvB,EAAMsQ,SAEF,EAAKK,mBACL,EAAKW,eAAiB,EAAK9P,MAAMlF,MAAMiV,cAAc,CAAC,EAAKZ,kBAAmB,CAACa,MAAM,KAIvE,KAAlBxR,EAAMsQ,QAAgB,CACtB,IAAMmB,EAAiB,EAAKJ,sBAExB,EAAKC,gBACL,EAAK9P,MAAMkQ,YAAY,EAAKJ,eAAgBG,EAAgB,EAAKd,qBA7P1D,EAkQnBgB,YAAc,SAAC3R,GAEX,GAAIZ,EAAEK,KAAK,KAA0B,WAAnB,EAAKiR,UAAwB,CAC3C,EAAKkB,gBAAkBhQ,OAAOC,OAAO,GAAIzC,EAAEE,eAC3C,EAAKsS,gBAAgBrS,GAAK,EAAKsS,cAAcC,wBAAwB5V,KACrE,EAAK0V,gBAAgBpS,GAAK,EAAKqS,cAAcC,wBAAwBC,IACrE,IAAIxQ,EAAU,CACVZ,SAAUiB,OAAOC,OAAO,GAAI,EAAK+P,iBACjChR,KAAM,CAAC1F,MAAO,EAAGC,OAAQ,IAG7B,EAAK8U,QAAQ/E,QAAQgF,OACrB,EAAK8B,SAAW,EAAKxQ,MAAM0H,OAAO3H,GAClC,EAAKyQ,SAASzR,SACdP,EAAMiS,mBAhRK,EAqRnBC,UAAY,WAER,GAAuB,UAAnB,EAAKxB,UAAuB,CAE5B,GADA,EAAKT,QAAQ/E,QAAQiH,cAChB,EAAKxB,kBAAoB,EAAK/V,MAAMwX,QAAqC,oBAA3B,EAAKxX,MAAMwX,OAAOC,KAA4B,CAC7F,IAAMZ,EAAiB,EAAKJ,sBAC5B,EAAKzW,MAAMwX,OAAO,EAAK5Q,MAAO,KAAMiQ,GACpC,EAAK7W,MAAM0X,oBAEf,IAAK,EAAK3B,kBAAoB,EAAK/V,MAAMwX,QAAqC,uBAA3B,EAAKxX,MAAMwX,OAAOC,KAA+B,CAChG,IAAMZ,EAAiB,EAAKJ,sBAC5B,EAAKzW,MAAMwX,OAAO,EAAK5Q,MAAO,KAAMiQ,GACpC,EAAK7W,MAAM0X,oBAEf,EAAKrC,QAAQ/E,QAAQqH,WAEzB,GAAI,EAAKP,UAA+B,WAAnB,EAAKtB,UAAwB,CAC9C,IAAM/P,EAAWe,IAAEgH,MAAM,EAAKsJ,SAASxP,IAAI,aACrC5B,EAAOc,IAAEgH,MAAM,CAACxN,MAAO,EAAK8W,SAAS7M,KAAK,cAAehK,OAAQ,EAAK6W,SAAS7M,KAAK,iBACpF5D,EAAS,CACXZ,SAAUA,EACVE,MAAM,CACFC,KAAK,eACEF,KAOf,EAAKoR,SAAS9O,SACd,EAAK+M,QAAQ/E,QAAQiF,SAErB,EAAK3O,MAAM0H,OAAO3H,GAGtB,EAAKoC,OAAOsK,kBAAiB,GAC7B,EAAK+D,SAAW,MA1TD,EA6TnBQ,YAAc,WAEV,GAAsB,WAAnB,EAAK9B,WAEAtR,EAAEQ,aAAeR,EAAEK,KAAK,KAAO,EAAKuS,SAAU,CAC9C,IAAMP,EAAiB,EAAKJ,sBAC5B,EAAKW,SAAS/L,IAAI,WAAY,CAC1B1G,EAAGqM,KAAK6G,IAAIhB,EAAelS,EAAG,EAAKqS,gBAAgBrS,GACnDC,EAAGoM,KAAK6G,IAAIhB,EAAejS,EAAG,EAAKoS,gBAAgBpS,KAEvD,EAAKwS,SAAS7M,KAAK,aAAcyG,KAAKC,IAAI4F,EAAelS,EAAI,EAAKqS,gBAAgBrS,IAClF,EAAKyS,SAAS7M,KAAK,cAAeyG,KAAKC,IAAI4F,EAAejS,EAAI,EAAKoS,gBAAgBpS,MAxU5E,EA6UnBkT,aAAe,WACX,EAAKb,cAAcc,SA5UnB,EAAKnR,MAAQ,IAAIsG,EAAJ,gBACb,EAAKnE,OAAS,KACd,EAAKkO,cAAgB,KACrB,EAAKe,UAAYtE,IAAMuE,YAEvB,EAAKlC,iBAAmB,KACxB,EAAKW,eAAiB,KACtB,EAAKU,SAAW,KAChB,EAAKJ,gBAAkB,CAACrS,EAAG,EAAGC,EAAG,GACjC,EAAKgR,kBAAmB,EACxB,EAAKD,oBAAsB,EAE3B,EAAKrB,MAAQ,CACT4D,MAAM,GAGV,EAAKrD,QAAUnB,IAAMuE,YACrB,EAAK5C,QAAU3B,IAAMuE,YAnBN,E,qDAsBnB,WACIxT,KAAKsE,OAAS,IAAIG,IAAU6J,MAAM,CAC9BpJ,GAAI7H,SAASkR,eAAevO,KAAKzE,MAAMG,IACvC8S,MAAOxO,KAAKmC,MAAMlF,MAClBpB,MAAO8U,GACP7U,OAAQ6U,GACRlC,oBAAoB,EACpBC,eAAgB,IAGpB1O,KAAKwS,cAAgBnV,SAASkR,eAAevO,KAAKzE,MAAMG,IAExDsE,KAAK0T,iBACL1T,KAAK4Q,QAAQ/E,QAAQ7D,KAAKhI,KAAKmC,MAAMwR,kB,2BASzC,WAGI,IAAMhM,EAAQ3H,KAAKmC,MAAMlF,MAAMuM,WAC/BxJ,KAAK4Q,QAAQ/E,QAAQ7D,KAAKL,K,kBAG9B,WACIlH,IAAET,KAAKuT,UAAU1H,SAAS+H,IAAI,UAAW,U,kBAG7C,WACInT,IAAET,KAAKuT,UAAU1H,SAAS+H,IAAI,UAAW,U,qBAI7C,WACI,OAAO5T,KAAKzE,MAAMsY,MAAQ,W,6BAG9B,WACI7T,KAAKmC,MAAMlF,MAAMoB,U,sBAGrB,SAASyV,GAEL,IADA,IAAMC,EAAcD,EAAY3R,MAAMlF,MAAMuM,WACnC8B,EAAI,EAAGA,EAAIyI,EAAY9J,OAAQqB,IACpCyI,EAAYzI,GAAKyI,EAAYzI,GAAGjC,QAChC0K,EAAYzI,GAAGrO,MAAQ+C,KAAKmC,MAAMlF,MAEtC+C,KAAKmC,MAAMlF,MAAM+W,SAASD,K,4BAG9B,WAAiB,IAAD,OAGZ/T,KAAKsE,OAAO5D,GAAG,sBAAsB,SAAEuT,EAAUC,GAC7C,IAAI1F,EAAQyF,EAASzF,MACLA,EAAMnK,SAAS,EAAKC,QAC1B6P,YACV3F,EAAM1I,KAAK,cAAe,OAC1B0I,EAAM1I,KAAK,YAAa,OACxB,EAAKwL,iBAAmB9C,KAG5BxO,KAAKsE,OAAO5D,GAAG,sBAAsB,SAAEuT,EAAUC,GAC7C,IAAI1F,EAAQyF,EAASzF,MACjB4F,EAAY5F,EAAMnK,SAAS,EAAKC,QAChC8P,IACJA,EAAU3O,YACV+I,EAAM1I,KAAK,cAAe,SAC1B0I,EAAM1I,KAAK,YAAa,SACxB,EAAKwL,sBAAmB+C,MAI5BrU,KAAKsE,OAAO5D,GAAG,oBAAoB,SAACuT,EAAUC,EAAKhU,EAAGC,GAElDjD,QAAQC,IAAI8W,GACZ,IAAIpM,EAAOoM,EAASzF,MACpBtR,QAAQC,IAAI,OAAQ0K,GAEfA,EAAK1E,IAAI,WAA2C,IAA9B0E,EAAK1E,IAAI,UAAU8G,QAG1CpC,EAAKqF,UAGLrF,EAAK1E,IAAI,WACT,EAAKhB,MAAMlF,MAAMoG,QAAQwE,EAAK1E,IAAI,WAAWG,QAAQuE,GAEzDA,EAAK3G,SACL,EAAKiB,MAAMqI,YAAY,EAAKrI,MAAM2I,SAASjD,OAK/C7H,KAAKsE,OAAO5D,GAAG,kBAAkB,SAACuT,EAAUC,EAAKhU,EAAGC,GAEhD,IAMImU,EANAzM,EAAOoM,EAASzF,MAEpB,EAAKrM,MAAM2B,iBAAiB+D,GAC5BA,EAAK5G,WAED,EAAK1F,MAAMwX,QAAQ,EAAKhC,gBAExB,EAAKxV,MAAMwX,SACXuB,EAAa,EAAK/Y,MAAMwX,OAAO,EAAK5Q,MAAO0F,EAAM,EAAKmK,wBAEtD,EAAKzW,MAAM0X,oBAAsBqB,GAAY,EAAK/Y,MAAM0X,oBACzDqB,GAAY,EAAK/Y,MAAMgZ,mBAAmBD,GAC7C,EAAKhD,iBAAmB,QAG5BtR,KAAKmC,MAAMlF,MAAMyD,GAAG,OAAO,WACvB,EAAKqQ,mBAITtQ,IAAET,KAAKuT,UAAU1H,SAASnL,GAAG,WAAW,SAACC,GACrC,GAAsB,KAAlBA,EAAMsQ,UAAmBtQ,EAAMmR,SAAWnR,EAAMoR,WAAapR,EAAM6T,SAAU,CAC7E,IAAMC,EAAY,EAAK7D,QAAQ/E,QAAQ6I,OAGnCD,IACA,EAAK7D,QAAQ/E,QAAQgF,OACrB,EAAK1O,MAAMiM,YAAYqG,GACvB,EAAK7D,QAAQ/E,QAAQiF,UAG7B,GAAsB,KAAlBnQ,EAAMsQ,UAAmBtQ,EAAMmR,SAAWnR,EAAMoR,UAAYpR,EAAM6T,SAAU,CAC5E,IAAMC,EAAY,EAAK7D,QAAQ/E,QAAQ8I,OAGnCF,IACA,EAAK7D,QAAQ/E,QAAQgF,OACrB,EAAK1O,MAAMiM,YAAYqG,GACvB,EAAK7D,QAAQ/E,QAAQiF,gB,iCAgLrC,WACI,MAAO,CACH5Q,EAAGH,EAAEE,cAAcC,EAAIF,KAAKwS,cAAcC,wBAAwB5V,KAClEsD,EAAGJ,EAAEE,cAAcE,EAAIH,KAAKwS,cAAcC,wBAAwBC,O,oBAI1E,WAAU,IAAD,OACL,IAAK1S,KAAK6P,MAAM4D,KAAM,OAAO,KAC7B,IAAMmB,EAAS,CACX/Y,MAAOmE,KAAKzE,MAAMsZ,cAAgB,OAClC/Y,OAAQkE,KAAKzE,MAAMuZ,eAAiB,QAGxC,OACI,sBAAK/Y,MAAM,aAAa8F,IAAK7B,KAAKuT,UAAlC,UACI,qBAAKxX,MAAM,gBAAgBK,MAAOwY,EAAlC,SACI,qBACIlZ,GAAIsE,KAAKzE,MAAMG,GACfK,MAAM,cACNS,QAASwD,KAAKxD,QACd4U,UAAW,SAACzQ,GAAD,OAAW,EAAKyQ,UAAUzQ,IACrCqQ,QAAS,SAACrQ,GAAD,OAAW,EAAKqQ,QAAQrQ,IACjC2R,YAAa,SAAC3R,GAAD,OAAW,EAAK2R,YAAY3R,IACzCkS,UAAW7S,KAAK6S,UAChBM,YAAanT,KAAKmT,YAClBE,aAAcrT,KAAKqT,aACnB0B,SAAS,QAGjB,cAAC,GAAD,CAASlT,IAAK7B,KAAKoQ,QAAnB,SACI,cAAC,GAAD,CAAaM,KAAMsE,KAAnB,SACI,cAAC,GAAD,CACInT,IAAK7B,KAAK4Q,QACVT,UAAS,UAAKnQ,KAAKzE,MAAMG,GAAhB,KACT6T,kBAAmBvP,KAAKuP,kBACxB0F,wBAAyBjV,KAAKiV,qC,GAtXvBhG,IAAMC,W,UCdpBtK,G,4JACjB,WACI,OACI,wBAAQtI,UAAU,sBAAsBE,QAASwD,KAAKzE,MAAMiB,QAA5D,SAAsEwD,KAAKzE,MAAMW,W,GAHzD+S,IAAMC,WCErBgG,I,kKACjB,WACI,OACI,qBAAK5Y,UAAU,eAAf,SACK0D,KAAKzE,MAAM4Z,QAAQtV,KAAI,SAAAuV,GAAM,OAAI,cAAC,GAAD,CAA0BlZ,KAAMkZ,EAAOlZ,KAAMM,QAAS4Y,EAAO5Y,SAAhD4Y,EAAOlZ,e,GAJ7B+S,IAAMC,YCAlCmG,I,MAAqB,SAASlT,EAAOqM,EAAOvO,GAEvD,GADA/C,QAAQC,IAAI,OAAQmY,WACmB,OAApC9G,EAAM+G,UAAUC,YAAYxC,MAAkBxE,EAAM9L,WAAWE,MAAS,IAAM,EAAjF,CACA1F,QAAQC,IAAI,oBACZ,IAAM4G,EAAQ5B,EAAM4B,MACpBA,EAAMxI,MAAMka,gBAAgBxV,MAGjByV,GAAmB,SAASvT,EAAOqM,GAE9C,GADAtR,QAAQC,IAAIqR,EAAM9L,WAAWlB,MAAMoB,OAChC4L,EAAM9L,WAAWlB,MAAMoB,MAAQ,IAAM,EAAG,CACzC,IAAMe,EAAW6K,EAAM5K,iBAAiB,CAACuO,MAAM,IACzC/O,EAASjB,EAAMlF,MAAMoG,QAAQmL,EAAM9L,WAAWU,QAEpDoL,EAAMiD,UACN,IAAK,IAAInG,EAAI,EAAGA,EAAI3H,EAASsG,OAAQqB,IACnC3H,EAAS2H,GAAGmG,UAGXrO,GACDjB,EAAM2B,iBAAiBV,KAKhBuS,GAAkB,SAASxT,EAAOqM,GAA0B,IAAnBvO,EAAkB,uDAAJ,GAC5DqB,EAAW,GACXC,EAAO,GACX,IAAKiN,GAASvO,EACVqB,EAAWrB,EACXsB,EAAO,CAAE1F,MAAO,GAAIC,OAAQ,QAE3B,KAAI0S,EAKL,MAAM,IAAIoH,MAAM,iBAJhBtU,EAAWkN,EAAMrL,IAAI,YACrB5B,EAAO,CAAE1F,MAAO2S,EAAM1I,KAAK,cAAehK,OAAQ0S,EAAM1I,KAAK,gBAMjE,IADA,IAAM+P,EAAc,CAAC,GAAK,KAClBvK,EAAI,EAAGA,EAAIuK,EAAY5L,OAAQqB,IACnCnJ,EAAM0H,OAAO,CACTvI,SAAW,CACTpB,EAAGoB,EAASpB,EAAKqB,EAAK1F,MAAQga,EAAYvK,GAAG,EAC7CnL,EAAGmB,EAASnB,EAAKoB,EAAKzF,OAAS+Z,EAAYvK,GAAG,GAEhD9J,MAAO,CACHC,KAAM,CACF5F,MAAO0F,EAAK1F,OAAS,EAAIga,EAAYvK,IACrCxP,OAAQyF,EAAKzF,QAAU,EAAI+Z,EAAYvK,SAO9CwK,GAAkB,SAAS3T,EAAOqM,GAAQ,IAAD,EAClDtR,QAAQC,IAAI,UAAWqR,GACvB,IAAMvR,EAAQkF,EAAMlF,MACpB,GAAwC,QAArCuR,EAAM+G,UAAUC,YAAYxC,MAAsD,KAApC,UAAAxE,EAAM9L,WAAW8K,cAAjB,eAAyBvD,SACG,QAAzEhN,EAAMoG,QAAQmL,EAAM9L,WAAW8K,OAAO,IAAI+H,UAAUC,YAAYxC,KAAgB,CAChF,IAAMrP,EAAW1G,EAAMoG,QAAQmL,EAAM9L,WAAW8K,OAAO,IAAI9K,WAAW8K,OACtEvQ,EAAMoG,QAAQmL,EAAM9L,WAAW8K,OAAO,IAAIiE,UAC1CjD,EAAMiD,UACHjD,EAAM9L,WAAWU,OAClBjB,EAAM2B,iBAAiB7G,EAAMoG,QAAQmL,EAAM9L,WAAWU,SAG9C,OAARO,QAAQ,IAARA,KAAUoS,SAAQ,SAAA5R,GAC2C,QAAtDlH,EAAMoG,QAAQc,GAASoR,UAAUC,YAAYxC,MAC9C7Q,EAAM2B,iBAAiB7G,EAAMoG,QAAQc,SAOxC6R,GAAY,SAAS7T,EAAOqM,GACvC,OAAOyH,GAAa7Q,KAAK,KAAMoJ,IAG3ByH,GAAe,SAASzH,EAAOrM,EAAO+T,GAAgC,IAAnBjW,EAAkB,uDAAJ,GACjEkN,EAAWhL,EAAMlF,MAAMiV,cAAc,CAAC1D,GAAQ,CAAC2D,MAAM,IACrDgE,EAAShU,EAAMkQ,YAAYlF,EAAUlN,EAAeiW,GAExD/I,EAAWhL,EAAMlF,MAAMoG,QAAQ8S,GAC3BC,GAAejU,EAAMqM,EAAMrB,IAC7BkJ,GAAWlU,EAAOgL,IAITmJ,GAAc,SAASnU,EAAOqM,GAIzC,IAHA,IAAM+H,EAAW/H,EAAM9S,GAEnB8a,EAAWhI,EACTgI,EAAS9T,WAAWU,QAAQ,CAKhC,GAA2C,SAH3CoT,EAAWrU,EAAMlF,MAAMoG,QAAQmT,EAAS9T,WAAWU,SAGvCmS,UAAUC,YAAYxC,KAEhC,YADA9V,QAAQwU,MAAM,qBAAuB8E,EAASjB,UAAUC,YAAYxC,KAAO,0CAK7E,IAAIrP,EAAW6S,EAAS9T,WAAW8K,OAE3B,OAAR7J,QAAQ,IAARA,KAAUoS,SAAQ,SAAA5R,GAChB,IAAI1B,EAAQN,EAAMlF,MAAMoG,QAAQc,GAE3B1B,EAAM/G,KAAO6a,GAChBE,GAActU,EAAOqM,EAAO/L,IAE1B4T,GAAWlU,EAAOqM,MAQ1B,IAAIkI,EAAavU,EAAMlF,MAAMyF,WAAWiF,MAAMgP,OAEpC,OAAVD,QAAU,IAAVA,KAAYX,SAAQ,SAAA5R,GAClB,IAAI1B,EAAQN,EAAMlF,MAAMoG,QAAQc,GACK,KAA7B,OAAL1B,QAAK,IAALA,OAAA,EAAAA,EAAOC,WAAWlB,MAAMoB,SACtB,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAO/G,MAAO6a,GACdE,GAActU,EAAOqM,EAAM/L,IAEzB4T,GAAWlU,EAAOqM,OAcxB,SAASiI,GAActU,EAAOyU,EAAWC,GAGvC,GAAGD,EAAUrB,UAAUC,YAAYxC,OAAS6D,EAAUtB,UAAUC,YAAYxC,KAAM,OAAO,EAGzF,GAA6C,YAAzC4D,EAAUrB,UAAUC,YAAYxC,KAClC,OAAO4D,EAAUlU,WAAWlB,MAAMtF,KAAKA,OAAS2a,EAAUnU,WAAWlB,MAAMtF,KAAKA,KAIlF,GAA4C,QAAzC0a,EAAUrB,UAAUC,YAAYxC,KAAgB,CAGjD,IAAI8D,EAAkB,YAAQF,EAAUlU,WAAW8K,QAAU,IACzDuJ,EAAkB,YAAQF,EAAUnU,WAAW8K,QAAU,IAG7D,IAAIsJ,IAAuBC,EAAoB,OAAO,EAGtD,GAAGD,EAAmB7M,SAAW8M,EAAmB9M,OAAQ,OAAO,EAKnE+M,EACA,KAAMF,EAAmB7M,OAAS,GAAG,CAInC,IAHA,IAAIxH,EAAQN,EAAMlF,MAAMoG,QAAQyT,EAAmB,IAG1CxL,EAAI,EAAGA,EAAIyL,EAAmB9M,OAAQqB,IAC7C,GAAGmL,GAActU,EAAOM,EAAON,EAAMlF,MAAMoG,QAAQ0T,EAAmBzL,KAAM,CAE1EwL,EAAmB7G,QACnB8G,EAAmB/G,OAAO1E,EAAG,GAC7B,SAAS0L,EAIb,OAAO,EAGT,OAAO,EAIT,OADA9Z,QAAQwU,MAAM,kCAAoCkF,EAAUrB,UAAUC,YAAYxC,KAAO,4BAClF,EAQT,SAASqD,GAAWlU,EAAOqM,GAAQ,IAAD,EAEhC,GAAwC,YAArCA,EAAM+G,UAAUC,YAAYxC,MAA0D,KAApC,UAAAxE,EAAM9L,WAAW8K,cAAjB,eAAyBvD,QAG5E,OAFAuE,EAAMiD,eACNvU,QAAQC,IAAI,UAKCqR,EAAM9L,WAAW8K,OACvBuI,SAAQ,SAAAtT,GAAU4T,GAAWlU,EAAOA,EAAMlF,MAAMoG,QAAQZ,OAEjE+L,EAAMiD,UAaR,SAAS2E,GAAejU,EAAOqM,EAAO0H,GAEpC,IAAIO,GAActU,EAAOqM,EAAM0H,GAE7B,OADAhZ,QAAQwU,MAAM,4DACP,EAGT,GAAoC,IAAjClD,EAAM9L,WAAWlB,MAAMoB,MAAe,OAAO,EAGhD,GAAG4L,EAAM9L,WAAWlB,MAAMoB,MAAQsT,EAAYxT,WAAWlB,MAAMoB,MAAS,OAAO,EAG/E,IAAIqU,EAAM,YAAO9U,EAAMlF,MAAMoG,QAAQmL,EAAM9L,WAAWU,QAAQV,WAAW8K,QAKzE,IAJAyJ,EAAOjH,OAAOiH,EAAOC,QAAQ1I,EAAM9S,GAAI,IAIjCub,EAAOhN,OAAS,GAAG,CACvB,IAMsE,EANlE4B,EAAUoL,EAAOhH,QAErB,GAAIpE,IAAYqK,EAAYxa,GAC1B,OAAO,EAGT,GAA+D,QAA5DyG,EAAMlF,MAAMoG,QAAQwI,GAAS0J,UAAUC,YAAYxC,KACpD,UAAA7Q,EAAMlF,MAAMoG,QAAQwI,GAASnJ,WAAW8K,cAAxC,SAAgDuI,SAAS,SAAA5R,GACvD8S,EAAOjP,KAAK7D,MAMlB,OAAO,E,IC/PYgT,G,kDACjB,WAAY5b,GAAQ,IAAD,8BACf,cAAMA,IACDsU,MAAQ,CACTsF,QAAS,CACLnM,OAAQ,CACJ,CACI9M,KAAM,cACNM,QAAS,WACLU,QAAQC,IAAI,uBAGpB,CACIjB,KAAM,MACNM,QAAS,WACLU,QAAQC,IAAI,iBAIxBia,MAAO,CACH,CACIlb,KAAM,YACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmBc,IAC9BnY,QAAQC,IAAI,sCAGpB,CACIjB,KAAM,UACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmBmB,IAC9BxY,QAAQC,IAAI,2BAGpB,CACIjB,KAAM,oBACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmBoB,IAC9BzY,QAAQC,IAAI,6BAGpB,CACIjB,KAAM,oBACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmBuB,IAC9B5Y,QAAQC,IAAI,4BAGpB,CACIjB,KAAM,YACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmByB,IAC9B9Y,QAAQC,IAAI,6BAGpB,CACIjB,KAAM,cACNM,QAAS,WACL,EAAKjB,MAAMgZ,mBAAmB+B,IAC9BpZ,QAAQC,IAAI,iCAK5B2D,MAAQ,CACJ5E,KAAO,CACH8M,OAAS,UACToO,MAAQ,WAEZrW,WAAa,CACTiI,OAAS,UACToO,MAAQ,aAtEL,E,0CA2EnB,WACI,OACI,qBAAK9a,UAAU,WAAWF,MAAO,CAAC4S,gBAAiBhP,KAAK6P,MAAM/O,MAAMC,WAAWf,KAAKzE,MAAMsY,MAAQ/S,MAAOd,KAAK6P,MAAM/O,MAAM5E,KAAK8D,KAAKzE,MAAMsY,OAA1I,SACI,sBAAKnY,GAAG,eAAR,UACI,+BAAMsE,KAAKzE,MAAMsY,KAAKwD,OAAO,GAAGC,cAAgBtX,KAAKzE,MAAMsY,KAAK0D,MAAM,GAAtE,WACA,cAAC,GAAD,CAAQrb,KAAK,cAAcM,QAASwD,KAAKzE,MAAMic,gBAC/C,cAAC,GAAD,CAAarC,QAASnV,KAAK6P,MAAMsF,QAAQnV,KAAKzE,MAAMsY,MAAOA,KAAM7T,KAAKzE,MAAMsY,gB,GAlF3D5E,IAAMC,WCJtBuI,I,wDACjB,WAAYlc,GAAQ,uCACVA,G,0CAGV,WACI,OAAKyE,KAAKzE,MAAMkY,MAIhBvW,QAAQC,IAAI,gBAER,qBAAKpB,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,qBAAKA,MAAM,gBAAX,SACMiE,KAAKzE,MAAM4Z,QAAQtV,KAAI,SAAA8L,GAAC,OACtB,wBAAqB5P,MAAK,gCAA2B4P,EAAEqH,MAAQxW,QAASmP,EAAEnP,QAA1E,SAAoFmP,EAAEzP,MAAzEyP,EAAEqH,WAKvB,qBAAKjX,MAAM,gBAAX,SACMiE,KAAKzE,MAAMoI,kBAfzBzG,QAAQC,IAAI,SACL,U,GARgB8R,IAAMC,YCQpBwI,I,MAFF,IAAIC,MAAM,c,kDAGzB,WAAYpc,GAAQ,IAAD,8BACf,cAAMA,IA6CVgZ,mBAAqB,SAACxB,GAClB,EAAK1D,SAAS,CACV0D,OAAQA,KAhDG,EAyDnB6E,gBAAkB,WACd,EAAKvI,SAAS,CACVwI,WAAW,KA3DA,EA+DnBpC,gBAAkB,SAACxV,GACf,EAAKoP,SAAS,CACVwI,WAAW,IAEf,EAAKC,eAAiBvV,OAAOC,OAAO,GAAIvC,IAnEzB,EAsEnB8X,kBAAoB,SAACzW,GACjBpE,QAAQC,IAAI,gBACZ,EAAK6a,WAAWnM,QAAQ1J,MAAM8V,eAAe,EAAKC,WAAWrM,QAAQ1J,MAAMwR,gBAC3E,EAAKiE,mBAvEL,EAAK/H,MAAQ,CACTgE,KAAM,SACNd,OAAQ,KACR8E,WAAW,GAEf,EAAKC,eAAiB,CAAE5X,EAAG,EAAGC,EAAG,GACjC,EAAK+X,WAAajJ,IAAMuE,YACxB,EAAK2E,UAAYlJ,IAAMuE,YACvB,EAAKwE,WAAa/I,IAAMuE,YACxB,EAAK5C,QAAU,GAXA,E,qDAcnB,WACI5Q,KAAKgY,WAAWnM,QAAQuM,OACxBpY,KAAKgY,WAAWnM,QAAQ+E,QAAQ/E,QAAQxN,U,gCAG5C,SAAmB2P,EAAWC,GAGzB,GAAIA,EAAU4F,OAAS7T,KAAK6P,MAAMgE,KAE/B,GAAwB,UAApB7T,KAAK6P,MAAMgE,KAAkB,CAC7B7T,KAAKmY,UAAUtM,QAAQuM,OACvBpY,KAAKgY,WAAWnM,QAAQ1J,MAAMlF,MAAMoB,QACpC,IAAMga,EAAOrY,KAAKmY,UAAUtM,QAAQ1J,MAAMwR,eAC1C3T,KAAKgY,WAAWnM,QAAQ1J,MAAM8V,eAAeI,GAC7CrY,KAAKgY,WAAWnM,QAAQ4H,YAIxBzT,KAAKmY,UAAUtM,QAAQ4H,OACvBzT,KAAKgY,WAAWnM,QAAQuM,OACxBpY,KAAKgY,WAAWnM,QAAQ+E,QAAQ/E,QAAQxN,U,+BAKpD,WACI2B,KAAKqP,SAAS,CACVwE,KAA0B,WAApB7T,KAAK6P,MAAMgE,KAAoB,QAAU,a,+BAUvD,WACI7T,KAAKuU,mBAAmB,Q,oBAuB5B,WAEI,IAAMY,EAAU,CACZ,CACInC,KAAM,SACN9W,KAAM,SACNM,QAASwD,KAAK+X,mBAElB,CACI/E,KAAM,SACN9W,KAAM,IACNM,QAASwD,KAAK4X,kBAItB,OACI,sBAAK7b,MAAM,YAAX,UACI,cAAC,GAAD,CACI8X,KAAM7T,KAAK6P,MAAMgE,KACjB2D,cAAexX,KAAKsY,kBAAkBlT,KAAKpF,MAC3CuU,mBAAoBvU,KAAKuU,mBAAmBnP,KAAKpF,QAGrD,cAAC,GAAD,CACItE,GAAIsE,KAAKzE,MAAMgd,SACf1E,KAAM7T,KAAK6P,MAAMgE,KACjBd,OAAQ/S,KAAK6P,MAAMkD,OACnBE,kBAAmBjT,KAAKiT,kBAAkB7N,KAAKpF,MAC/CuU,mBAAoBvU,KAAKuU,mBACzBkB,gBAAiBzV,KAAKyV,gBACtB/M,gBAAiB1I,KAAKzE,MAAMmN,gBAC5B7G,IAAK7B,KAAKmY,YAId,cAAC,GAAD,CACIzc,GAAIsE,KAAKzE,MAAMgd,SAAW,eAC1B1E,KAAM7T,KAAK6P,MAAMgE,KACjBd,OAAQ/S,KAAK6P,MAAMkD,OACnBE,kBAAmBjT,KAAKiT,kBAAkB7N,KAAKpF,MAC/CuU,mBAAoBvU,KAAKuU,mBACzBkB,gBAAiBzV,KAAKyV,gBACtB/M,gBAAiB1I,KAAKzE,MAAMmN,gBAC5B7G,IAAK7B,KAAKgY,aAKd,cAAC,GAAD,CAAOvE,KAAMzT,KAAK6P,MAAMgI,UAAW1C,QAASA,EAA5C,SACI,cAAC,GAAD,CACIzZ,GAAIsE,KAAKzE,MAAMgd,SAAW,eAC1B1E,KAAM,SACNd,OAAQ,KACRE,kBAAmB,KACnBsB,mBAAoB,KACpBkB,gBAAiB,KACjB/M,gBAAiB1I,KAAKzE,MAAMmN,gBAC5BmM,aAAa,OACbC,cAAc,OACdjT,IAAK7B,KAAKkY,sB,GAxIKjJ,IAAMC,YCJxBsJ,G,kDACjB,WAAYjd,GAAQ,IAAD,8BACf,cAAMA,IAmBVqE,iBAAmB,WACf,EAAKyP,SAAS,CACVoJ,OAAQ,EAAK5I,MAAM4I,QAGvB,IA8BaC,EA9BPC,GA8BOD,EA9BmB,eA+B7BjY,IAAE,eAAemY,KAAjB,uBAAsCF,EAAtC,QA9BGG,EAAoBF,EAAYC,KAAK,oBAC3CD,EAAYG,YAAY,eAEpBH,EAAYI,SAAS,eACrBF,EAAkBG,KAAK,UAGvBH,EAAkBG,KAAK,SAjCZ,EAsCnBtQ,gBAAkB,SAACuQ,GACX,EAAKpJ,MAAM4I,QACf,EAAKS,MAAQD,EACb,EAAKC,MAAMjW,SAvCX,EAAKkW,UAAYlK,IAAMuE,YACvB,EAAK0F,MAAQ,KACb,EAAKrJ,MAAQ,CACT4I,OAAO,GALI,E,qDASnB,WACIvb,QAAQC,IAAI,YAAa6C,KAAKmZ,a,gCAGlC,SAAmBnL,EAAWC,GACtBjO,KAAK6P,MAAM4I,OAASzY,KAAKkZ,QACzBlZ,KAAKkZ,MAAME,QACXpZ,KAAKkZ,MAAMG,YAAc,K,oBA4BjC,WACI,OACI,sBAAK3d,GAAG,MAAMY,UAAU,MAAxB,UACI,cAAC,EAAD,CAASZ,GAAG,SAAS+c,MAAOzY,KAAK6P,MAAM4I,MAAO7Y,iBAAkBI,KAAKJ,mBACrE,cAAC,GAAD,CAAW2Y,SAAS,aAAa1W,IAAK7B,KAAKmZ,UAAWzQ,gBAAiB1I,KAAK0I,yB,GAjD3DuG,IAAMC,WCHvChS,QAAQC,IAAI,eACZL,OAAO2H,MAAQA,EAEf3H,OAAOiW,OAAS,KAChBjW,OAAO+W,KAAO,SAKd,IAAMyF,GAAMC,IAASC,OACjB,cAAC,GAAD,IACAnc,SAASkR,eAAe,SAG5BrR,QAAQC,IAAImc,IACZpc,QAAQC,IAAImc,GAAIH,a","file":"static/js/main.f4ea5f04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1839c7ce.png\";","import React from 'react';\nimport importIcon from './MenuIcons/import.png';\nimport exportIcon from './MenuIcons/export.png';\nimport logoIcon from './MenuIcons/logo.png';\n\nimport './MenuBar.css'\n\nexport default function MenuItem(props) {\n\n\n  const styling = `\n    .cls-1{\n      fill:#ed6b4d;\n      stroke:#e2f3f7;\n      stroke-miterlimit:10;\n      stroke-width:12px;\n    }\n    .cls-2 {\n      fill:#e2f3f7;\n    }\n  `;\n\n  //get SVG path of icon to include instead of PNG because unless we make the PNGs the correct size to begin with,\n  //it will cause weird scaling issues when it tries to fix the aspect ratio\n  const SVGS = {\n    './MenuIcons/logo.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.23 762.74\" width=\"8vh\" height=\"8vh\"><defs><style>{styling}</style></defs><path class=\"cls-1\" d=\"M1022,769v96.74q0,19.28-3.79,30.81a49,49,0,0,1-13.94,20.83q-10.17,9.28-26,17.9Q932.46,960,890.12,971.41t-92.27,11.36q-58.17,0-106-17.91t-81.58-52q-33.75-34.08-51.81-82.62Q543.75,790.83,541,743.9c-1,0-1.92,0-2.9,0H256.29q-33.87,0-48.71-15t-14.84-48.54V295.58q0-22.33,6.63-36.49a41.18,41.18,0,0,1,20.78-20.6Q234.3,232,256.29,232H530.06q24.78,0,36.84,11t12,28.81q0,18.15-12,29.15t-36.84,11H296.45V437.7h215.1q23.74,0,35.44,10.65t11.7,28.11q0,17.48-11.52,28.46t-35.62,11H296.45V661.53H538.09q3.76,0,7.26.27a287.88,287.88,0,0,1,12.56-47.73q17.55-48.89,51.64-83t83-52.15q48.88-18.07,110.85-18.08,51,0,90.2,13.6t63.69,34.25q24.43,20.67,36.83,43.73t12.39,41q0,19.29-14.28,32.88a47.94,47.94,0,0,1-34.26,13.6,46.05,46.05,0,0,1-21.17-5.17,48,48,0,0,1-17-14.46q-18.93-29.6-32-44.75T852.42,550q-22.2-10.34-56.63-10.33-35.46,0-63.34,12.22a130.87,130.87,0,0,0-47.68,35.46q-19.8,23.24-30.3,57T644,719.07q0,88.81,40.8,136.67t113.77,47.85a231.88,231.88,0,0,0,66.62-9.3,337.73,337.73,0,0,0,63.17-26.51V785.85H849.15q-28.57,0-43.21-8.61T791.31,748q0-16.86,12.22-27.88t33.22-11h116q21.35,0,36.15,3.79a40.81,40.81,0,0,1,23.92,16.87Q1022,742.82,1022,769Z\" transform=\"translate(-186.74 -226.03)\"/></svg>\n    ,'./MenuIcons/export.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.25\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path class=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.69)\"/><path class=\"cls-2\" d=\"M384.19,390.1,533.64,240.66l48.21-48.21a38.5,38.5,0,0,1,55.4,0l48.22,48.22L834.9,390.1a40.17,40.17,0,0,1,0,56.81L793.71,488.1a40.17,40.17,0,0,1-56.81,0L679,430.18V751.79A40.18,40.18,0,0,1,638.81,792H580.55a40.18,40.18,0,0,1-40.17-40.17V429.91L482.19,488.1a40.17,40.17,0,0,1-56.81,0l-41.19-41.19A40.17,40.17,0,0,1,384.19,390.1Z\" transform=\"translate(-179.38 -180.69)\"/><path class=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.69)\"/><path class=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.69)\"/></svg>\n    ,'./MenuIcons/import.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.26\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path class=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.68)\"/><path class=\"cls-2\" d=\"M834.91,582.54,685.46,732l-48.21,48.21a38.5,38.5,0,0,1-55.4,0L533.63,732,384.2,582.54a40.17,40.17,0,0,1,0-56.81l41.19-41.19a40.17,40.17,0,0,1,56.81,0l57.92,57.92V220.85a40.18,40.18,0,0,1,40.17-40.17h58.26a40.18,40.18,0,0,1,40.17,40.17V542.73l58.19-58.19a40.17,40.17,0,0,1,56.81,0l41.19,41.19A40.17,40.17,0,0,1,834.91,582.54Z\" transform=\"translate(-179.38 -180.68)\"/><path class=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.68)\"/><path class=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.68)\"/></svg>\n  }\n  let size = props.text==='' ? '100%' : '70%';\n  let text = props.img==='' ? \"100%\" : \"70%\";\n  let img_vis = props.img==='' ? \"hidden\" : \"visable\";\n\n  const style = props.custom_style;\n\n  return (\n    <div style={style} className={`menu-item ${props.classString || ''}`} onClick={props.onClick} aria-label={props.label}>\n      {SVGS[props.img]}\n      {/* <img style={{visibility:img_vis}} src={props.img} alt={props.text} width={size+\"\"} height={size+\"\"}/> */}\n      <h4 className=\"menu-item-label\" style={{fontSize: text}}>{props.text}</h4>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport MenuItem from './MenuItem.js';\nimport './MenuBar.css';\nimport $ from 'jquery';\n\nexport default function MenuBar(props) {\n  //have to have menu items inside Menu Bar here since some buttons (such as the mute button) are responsible\n  //for updating the state of other components, so their on click event handlers will come through props\n  const MenuItems = {\n    //menu items that float left on the menu bar\n    left: [\n      {\n        text: '',\n        img: './MenuIcons/logo.png',\n        onClick: function(){\n          window.open('https://github.com/eddiekrystowski/existential-graphs')\n        },\n        custom_style: {\n          marginLeft: '0vw'\n        }\n      },\n      {\n        text: 'Existential Graphs',\n        img: '',\n        onClick: function(){\n          return;\n        },\n        custom_style: {\n          marginLeft: '1vw'\n        }\n      },\n      {\n        text: 'Import',\n        img: './MenuIcons/import.png',\n        onClick: importEG,\n        custom_style: {\n          marginLeft: '10vw'\n        }\n      },\n      {\n        text: 'Export',\n        img: './MenuIcons/export.png',\n        onClick: exportEG,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n    ],\n\n    //menu items that float right on the menu bar\n    right: [\n      {\n        text: 'Unmute',\n        label: 'Toggle Sound',\n        classString: 'mute-active',\n        img: './MenuIcons/export.png',\n        onClick: props.handleMuteToggle,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n      {\n        text: 'Settings',\n        img: './MenuIcons/export.png',\n        onClick: () => {},\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      }\n    ]\n  }\n  \n    //Funtions for the above MenuItems\n  //TODO: MAKE IMPORT/EXPORT WORK FOR NEW MULTI-GRAPH SYSTEM\n  //    - have importEG return a new graph?\n  //      ex. Paper.graph = importEG();\n  function exportEG(graph) {\n    console.log('Exporting...');\n    let graphJSON = graph.toJSON();\n    const file = new Blob([JSON.stringify(graphJSON)], { type: 'application/json'});\n      const a = document.createElement(\"a\");\n      let url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = 'graph.json';\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(url);\n      }, 0);\n  }\n  \n  // FIXME: graph arg is here just so linter is happy, see above TODO about fixing this\n  // for multi graph system\n  // We also have to consider... should this function make a paper? or just set graph of of existing paper...\n  // return Graph class (components/Paper/Graph/Graph.js)\n  function importEG(graph) {\n    console.log('Importing...');\n    const input = document.createElement(\"input\");\n      input.type = \"file\";\n      // choosing the file\n      input.onchange = function (ev) {\n          const file = ev.target.files[0];\n          if (file.type !== \"application/json\") {\n              alert(\"File must be of .JSON type\");\n              return;\n          }\n          // read the file\n          const reader = new FileReader();\n          reader.readAsText(file, 'UTF-8');\n          reader.onload = function (readerEvent) {\n              const content = readerEvent.target.result;\n              const erase = window.confirm(\"Erase your current workspace and import graph?\");\n              if (erase) {\n                  graph.clear();\n                  const dataObj = JSON.parse(content);\n                  graph.fromJSON(dataObj);\n                  \n              }\n          };\n      };\n      input.click();\n  }\n  \n  return (\n    <div className=\"header-bar\">\n      <div className=\"header-bar-left\">\n        {MenuItems.left.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img}\n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n      <div className=\"header-bar-right\">\n        {MenuItems.right.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img} \n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n    </div>\n  )\n}","import $ from \"jquery\";\n\nclass EventController {\n    constructor() {\n        this.mousePosition =  {x: 0, y: 0};\n        this.keys = [];\n        this.which = 0;\n        this.key = '';\n        this.isMouseDown = false;\n    }\n\n    isActive(key) {\n        return this.key.toLocaleLowerCase() === key || this.which === key || this.keys[key] === true;\n    }\n\n}\n\nlet E = new EventController();\n\n$(document).on('keydown', function(event) {\n    E.keys[event.which] = true;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('keyup', function(event){\n    E.keys[event.which] = false;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('mousemove', function(event) {\n    E.mousePosition = {\n        x: event.clientX,\n        y: event.clientY\n    }\n});\n\n$(document).on('mousedown', function(event) {\n    E.isMouseDown = true;\n});\n\n$(document).on('mouseup', function(event) {\n    E.isMouseDown = false;\n});\n\nexport default E;","export default __webpack_public_path__ + \"static/media/delete.775131a8.wav\";","export default __webpack_public_path__ + \"static/media/snip.6f2bc4d7.wav\";","export let color = {\n    shapes: {\n        background: {\n            odd: {\n                inactive: \"#f2f8fc\",\n                active: \"#f2f8fcE0\"\n            },\n            even: {\n                inactive: \"#ffffff\",\n                active: \"#ffffffE0\"\n            },\n            default: {\n                color: \"#ffffff00\"\n            }\n        }\n    }\n}","// class for cuts\nimport * as joint from 'jointjs'\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport Snip from '../../sounds/snip.wav'\nimport { color } from '../../util/color.js';\n\n\nconst CUT_DEFAULTS = {\n    position: {\n        x: 10,\n        y: 10\n    },\n    size: {\n        width: 40, \n        height: 40\n    },\n    attrs: {\n        rect: {\n            class: 'cut_rect',\n            width: 40,\n            height: 40,\n            fill: '#ffffff99',\n            stroke: 'black',\n            strokeWidth: 2,\n        },\n        text: {\n            class: 'cut_text',\n            fontSize: 30,\n            'ref-x': 0.5,\n            'ref-y': 0.5,\n            ref: 'rect',\n            'y-alignment': 'middle',\n            'x-alignment': 'middle',\n        }\n    },\n    graph: {}\n}\n\nexport class Cut extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Cut\",\n            attrs: {\n                rect: CUT_DEFAULTS.attrs.rect,\n                text: CUT_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet) {\n        const options = _.cloneDeep(CUT_DEFAULTS);\n        if (config) {\n            options.position = Object.assign(options.position, config.position);\n            options.size = Object.assign(options.size, config.size);\n            options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n            options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        // adjust size / position if cut was created with a child\n        // in order for undo/redo to function properly\n        if (config.child) {\n            const child = config.child;\n            options.attrs.rect.width = child.attributes.attrs.rect.width + options.attrs.rect.width;\n            options.attrs.rect.height = child.attributes.attrs.rect.height + options.attrs.rect.height;\n            options.position = {\n                x: child.attributes.position.x - (options.attrs.rect.width - child.attributes.attrs.rect.width) / 2,\n                y: child.attributes.position.y - (options.attrs.rect.height - child.attributes.attrs.rect.height) / 2,\n            }\n        }\n       \n        const cut = new Cut({\n            markup: '<rect/><text/>',\n            position: {\n                ...options.position\n            },\n            size: {\n                ...options.size\n            },\n            attrs: {\n                rect: {\n                    ...options.attrs.rect\n                },\n                text: {\n                    ...options.attrs.text\n                },\n                level: 0\n            },\n            // set custom attributes here:\n            sheet: options.sheet\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        cut.sheet = options.sheet;\n\n        cut.addTo(cut.sheet.graph);\n        //add tools (some events events also)\n        this.addTools(cut);\n        let audio = new Audio(Snip);\n        audio.play();\n        //check for children\n        if (config && config.child) {\n            let child = config.child;\n            let hasparent = false;\n            if (child.get(\"parent\")) {\n                let parent = cut.sheet.graph.getCell(child.get(\"parent\"));\n                parent.unembed(child);\n                parent.embed(cut)\n                parent.toBack()\n                hasparent = true;\n            }\n            cut.embed(child)\n            if (hasparent) {\n                cut.sheet.treeResize(cut, cut.attributes.attrs.rect.width / 2);\n            }\n        }\n        console.log(cut);\n        return cut;\n    }\n\n    destroy() {\n        //check if cut has parents or children, if so children become new children of parent;\n        let parent = this.getParentCell();\n        let children = this.getEmbeddedCells()\n        for (const child of children) {\n            this.unembed(child)\n        }\n        this.remove();\n        if (parent) {\n            this.sheet.handleCollisions(parent);\n        }\n\n        this.sheet.paper.handleDeleteCell();\n    }\n\n    active() {\n        //cut is being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.active, odd:color.shapes.background.odd.active, premise: color.shapes.background.default.color});\n    }\n\n    inactive() {\n        //cut is not being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.inactive, odd:color.shapes.background.odd.inactive, premise: color.shapes.background.default.color});\n    }\n\n    getBoundingBox() {\n        return  {\n                    width: this.attributes.attrs.rect.width,\n                    height: this.attributes.attrs.rect.height,\n                    x: this.attributes.position.x,\n                    y: this.attributes.position.y\n                }\n    }\n\n    getArea() {\n        return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n\n    // move(position, timestep = 1000, frames = 500) {\n    //     let difference = {\n    //       x: position.x - this.attributes.position.x,\n    //       y: position.y - this.attributes.position.y\n    //     }\n    //     let step = {\n    //       x: difference.x / frames,\n    //       y: difference.y / frames\n    //     }\n    //     for (let i = 0; i < frames; i++) {\n    //       this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //       this.sleep(timestep);\n    //     }\n    //     console.log(\"move over!\");\n    //   }\n  \n    //   sleep(ms) {\n    //     return new Promise(resolve => setTimeout(resolve, ms));\n    //   }\n\n    //TODO: refactor function to not take in element. Instead, can we either store model/element in Cut class or access it directly?\n    ///     ( i think we can? )\n    addTools(element) {\n        //element view is in charge of rendering the elements on the paper\n        let elementView = element.findView(element.sheet.paper.jpaper);\n        //clear any old tools\n        elementView.removeTools();\n        // boundary tool shows boundaries of element\n        let boundaryTool = new joint.elementTools.Boundary();\n    \n        let NWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"0%\",\n            cursor: \"nw-resize\"\n        }));\n        let NEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"0%\",\n            cursor: \"ne-resize\"\n        }));\n        let SWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"100%\",\n            cursor: \"sw-resize\"\n        }));\n        let SEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"100%\",\n            cursor: \"se-resize\"\n        }));\n    \n        //add event handlers to tools for resizing\n        $(NWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(NEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n    \n        let rect_tools = [boundaryTool, NWresizeTool, NEresizeTool, SEresizeTool, SWresizeTool];\n    \n        let toolsView = new joint.dia.ToolsView({\n            tools: rect_tools\n        });\n    \n        elementView.addTools(toolsView);\n        //start with tools hidden\n        elementView.hideTools();\n        // element.on(\"change:position\", function (eventView) {\n        //     element.toFront();\n        // });\n        // --- end of paper events -----\n    }\n}\n\nObject.assign(joint, {\n    \"dia.Element\": {\n        Cut\n    }\n})\n\n\n\n\n//global objects for cut resizing\nlet prev_pos = {\n    x: 0,\n    y: 0\n}\n\nlet current_pos = {\n    x: 0,\n    y: 0\n}\n\n//TODO: THIS NEEDS TO CHANGE BASED ON HOW MANY THINGS ARE IN THE\n//CUT AND WHERE THEY ARE\nconst MIN_SIZE = {\n    width: 40,\n    height: 40\n}\n\n/**\n * Event handler that sets up resizing when the user first puts their mouse down\n * on a resize tool.\n * @param {MouseEvent} event\n */\nfunction resize_mousedown(event) {\n    const target = this.sheet.graph.getCell($(event.target).parent().attr('model-id'));\n    prev_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n    \n    $(document).on('mouseup', { target }, resize_mouseup);\n    $(document).on('mousemove', { target, direction: event.target.getAttribute('data-direction') },  resize_mousemove);\n    event.stopPropagation();\n\n    if (target.get('parent')) {\n        this.sheet.graph.getCell(target.get('parent')).unembed(target);\n    }\n}\n\n/**\n * Performs different resizing algorithms based on the direction of resizing\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mousemove(event) {\n    //update current pos to mouse position\n    current_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n\n    //extract copy of size from target Cut \n    const size = {\n        width: event.data.target.attributes.attrs.rect.width,\n        height: event.data.target.attributes.attrs.rect.height\n    };\n\n    //extract copy of position from target Cut\n    const position = {\n        x: event.data.target.attributes.position.x,\n        y: event.data.target.attributes.position.y\n    }\n\n    //calclulate change in mouse position\n    const delta = {\n        x: current_pos.x - prev_pos.x,\n        y: current_pos.y - prev_pos.y\n    }\n\n    //define modifiers to determine how\n    //size/position should respond to the deltas\n    const modifiers = {\n        size_x: 1,\n        size_y: 1,\n        pos_x: 0,\n        pos_y: 0\n    }\n\n    //set the modifiers based on the direction we are resizing\n    switch (event.data.direction) {\n        case 'nw':\n            modifiers.size_x = -1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 1;\n            break;\n        case 'ne':\n            modifiers.size_x = 1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 1;\n            break;\n        case 'sw':\n            modifiers.size_x = -1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 0;\n            break;\n        case 'se':\n            modifiers.size_x = 1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 0;\n            break;\n        default:\n            throw new RangeError('Invalid direction value. Expected nw, ne, sw, se. Got ' + event.data.direction);\n    }\n    \n    //if the resize will put us at under MIN_SIZE, then set respective delta to 0 to cancel resize\n    if (size.width + modifiers.size_x * delta.x < MIN_SIZE.width) delta.x = 0;\n    if (size.height + modifiers.size_y * delta.y < MIN_SIZE.height) delta.y = 0;\n\n    //set size based on modifiers and deltas\n    event.data.target.attr('rect/width',  size.width + modifiers.size_x * delta.x);\n    event.data.target.attr('rect/height', size.height + modifiers.size_y * delta.y);\n\n    //adjust position to offset size changes in certain directions\n    event.data.target.set('position',  { x: position.x + modifiers.pos_x * delta.x, y: position.y + modifiers.pos_y * delta.y});\n    \n    //copy current_pos to prev_pos\n    prev_pos = Object.assign({}, current_pos);\n}\n\n/**\n * Cleans up resize event\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mouseup (event) {\n    $(document).off('mouseup', resize_mouseup);\n    $(document).off('mousemove', resize_mousemove);\n    event.data.target.sheet.handleCollisions(event.data.target);\n}\n\nfunction createResizeTool(config) {\n    let r = (config && config.r) || 7;\n    let fill = (config && config.fill) || \"transparent\";\n    let x = (config && config.x) || \"0%\";\n    let y = (config && config.y) || \"0%\";\n    let offset = (config && config.offset) || {x: 0, y:0};\n    let cursor = (config && config.cursor) || \"nw-resize\";\n\n    let ResizeTool = {\n        markup: [{\n            tagName: 'circle',\n            selector: 'button',\n            attributes: {\n                'r': r,\n                'fill': fill,\n                'cursor': cursor,\n                'data-direction': cursor.substring(0,2)\n            }\n        }],\n        x: x,\n        y: y,\n        offset: offset,\n        rotate: true,\n    };\n    return ResizeTool\n}\n\n","import * as joint from 'jointjs'\nimport _ from 'lodash'\nimport './Premise.css'\n// class for premises (letters)\n\nconst PREMISE_DEFAULTS = {\n  position: {\n    x: 10,\n    y: 10\n  },\n  size: {\n    width: 40,\n    height: 40\n  },\n  attrs: {\n    rect: {\n      class: 'premise_rect',\n      width: 40, \n      height: 40, \n      fill: '#ffffff00', \n      stroke: 'black', \n      strokeWidth: 0\n    },\n    text: {\n      class: 'premise_text',\n      text: 'P',\n      fontSize: 50,\n      'ref-x': 0.5,\n      'ref-y': 0.5,\n      ref: 'rect',\n      'x-alignment': 'middle',\n      'y-alignment': 'middle'\n    }\n  },\n  graph: {}\n}\n\nexport class Premise extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Premise\",\n            attrs: {\n                rect: PREMISE_DEFAULTS.attrs.rect,\n                text: PREMISE_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet, fast) {\n        const options = _.cloneDeep(PREMISE_DEFAULTS);\n\n        if (config) {\n          options.position = Object.assign(options.position, config.position);\n          options.size = Object.assign(options.size, config.size);\n          options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n          options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        const premise = new Premise({\n          markup: '<g class=\"rotatable\"><rect/><text/></g>',\n          position: {\n              ...options.position\n          },\n          size: {\n              ...options.size\n          },\n          attrs: {\n              rect: {\n                  ...options.attrs.rect\n              },\n              text: {\n                  ...options.attrs.text\n              },\n              level: 0\n          },\n          // set custom attributes here:\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        premise.sheet = options.sheet;\n\n        premise.addTo(premise.sheet.graph)\n      \n        //add tools (some events events also)\n        if(!fast) this.addTools(premise);\n\n        return premise;\n    }\n\n    destroy() {\n      this.remove();\n      this.sheet.paper.handleDeleteCell();\n    }\n  \n    active() {\n      return;\n    }\n\n    inactive(){\n      return;\n    }\n\n    getBoundingBox() {\n      return  {\n                width: this.attributes.attrs.rect.width,\n                height: this.attributes.attrs.rect.height,\n                x: this.attributes.position.x,\n                y: this.attributes.position.y\n              }\n    }\n\n    getArea() {\n      return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n        \n    // move(position, timestep = 1000, frames = 500) {\n    //   let difference = {\n    //     x: position.x - this.attributes.position.x,\n    //     y: position.y - this.attributes.position.y\n    //   }\n    //   let step = {\n    //     x: difference.x / frames,\n    //     y: difference.y / frames\n    //   }\n    //   for (let i = 0; i < frames; i++) {\n    //     this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //     this.sleep(timestep);\n    //   }\n    //   console.log(\"move over!\");\n    // }\n\n    // sleep(ms) {\n    //   return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n    \n\n    //TODO: see Cut.addTools()\n    addTools(element) {\n      //element view is in charge of rendering the elements on the paper\n      let elementView = element.findView(element.sheet.paper.jpaper);\n      //clear any old tools\n      elementView.removeTools();\n      // boundary tool shows boundaries of element\n      let boundaryTool = new joint.elementTools.Boundary();\n  \n      let rect_tools = [boundaryTool];\n  \n      let toolsView = new joint.dia.ToolsView({\n          tools: rect_tools\n      });\n  \n      elementView.addTools(toolsView);\n      //start with tools hidden\n      elementView.hideTools();\n      // element.on(\"change:position\", function (eventView) {\n      //     element.toFront();\n      // });\n      // --- end of paper events -----\n  }\n\n}\n\nObject.assign(joint.shapes, {\n    \"dia.Element\": {\n        Premise\n    }\n})\n\n","export function findSmallestCell(cells) {\n    // returns the smallest cell (by area) of an array of joint.dia.Cell objects\n    if (cells.length === 0) { return undefined }\n    let smallest_area = cells[0].attributes.attrs.rect.width * cells[0].attributes.attrs.rect.height;\n    let smallest_cell = cells[0];\n    for (const cell of cells) {\n        let width = cell.attributes.attrs.rect.width;\n        let height = cell.attributes.attrs.rect.height;\n        let area = width * height;\n        if (area < smallest_area) {\n            smallest_area = area;\n            smallest_cell = cell;\n        }\n    }\n    return smallest_cell\n}\n\nexport function contains(bbox, otherbbox) {\n    // returns true of otherbbox fits completely inside of bbox\n    let bbox_info = {\n        left_x: bbox.x,\n        right_x: bbox.x + bbox.width,\n        top_y: bbox.y,\n        bottom_y: bbox.y + bbox.height\n    }\n    let otherbbox_info = {\n        left_x: otherbbox.x,\n        right_x: otherbbox.x + otherbbox.width,\n        top_y: otherbbox.y,\n        bottom_y: otherbbox.y + otherbbox.height\n    }\n    if (bbox_info.left_x < otherbbox_info.left_x && bbox_info.right_x > otherbbox_info.right_x && bbox_info.top_y < otherbbox_info.top_y && bbox_info.bottom_y > otherbbox_info.bottom_y) {\n        //console.log(\"bbox contains otherbbox\", bbox, otherbbox);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function overlapsCells(target, cells) {\n    let cell_collisions = []\n    for (const cell of cells) {\n        if (target.id === cell.id) continue;\n        if (intersects(target.getBoundingBox(), cell.getBoundingBox())) {\n            cell_collisions.push(cell);\n        }\n    }\n    return cell_collisions;\n}\n\nexport function intersects(mainbbox, otherbbox) {\n    if (contains(mainbbox, otherbbox) || contains(otherbbox, mainbbox)) {\n        return true;\n    }\n\n    // check if bounding boxes overlap one another\n    \n    //check if either bbox is completely above the other\n    //      bbox.y          is the top edge\n    //      bbox.y + height is the bottom edge\n    //check if some bottom edge is < some top edge\n    if (mainbbox.y + mainbbox.height < otherbbox.y || otherbbox.y + otherbbox.height < mainbbox.y) {\n        //one of the bbox is completely above the other\n        return false;\n    }\n    //check if either bbox is completely to the left of the other\n    //      bbox.x          is the left edge \n    //      bbox.x + width  is the right edge\n    // check if some right edge < other left edge\n    if (mainbbox.x + mainbbox.width < otherbbox.x || otherbbox.x + otherbbox.width < mainbbox.x) {\n        //one of the bbox is completely to the left of the other\n        return false;\n    }\n\n    return true;\n}\n\n/*\n    move_vector: {\n        start: {\n            x: int,\n            y: int\n        },\n        target: {\n            x: int,\n            y: int\n        }\n    }\n*/\n\n//Not used right now.... but it may need to be at some point.... DO NOT REMOVE!\n//checks to make sure that you dont create parent/child relationships by moving cells\nexport function safeMove(main, move_target) {\n    let move_vector = {\n        start: { \n            x: main.attributes.position.x,\n            y: main.attributes.position.y\n        },\n        target: {\n            x: move_target.x,\n            y: move_target.y\n        }\n    }\n    let mainbbox = main.getBoundingBox();\n    let new_bbox = {\n        x: move_vector.target.x,\n        y: move_vector.target.y,\n        width: mainbbox.width,\n        height: mainbbox.height\n    }\n    //check if moving a cell somewhere would either contain a new cell or be contained by another cell\n    let cells = main.sheet.getCellsByLevel(0);\n    for (const invader of cells) {\n        if (invader.id === main.id) continue;\n        if (contains(new_bbox, invader.getBoundingBox()) || contains(invader.getBoundingBox(), new_bbox)) {\n            //moving cell would contain invader or invader would contain cell\n            //move the invader out\n            let diff_y = move_vector.target.y - move_vector.start.y;\n            let diff_x = move_vector.target.x - move_vector.start.x\n            if (diff_x === 0) {\n                if (diff_y < 0) {\n                    //if main is being pushed up, push invader up also\n                    pushTop(main, invader);\n                } else if (diff_y > 0) {\n                    //if the main cell is being moved down, move the invader down too\n                    pushBottom(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_y === 0 for vertical movement\");\n                }\n            } else if (diff_y === 0) {\n                if (diff_x < 0) {\n                    pushLeft(main, invader);\n                } else if (diff_x > 0) {\n                    pushRight(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_x === 0 for horizontal movement\");\n                }\n            }\n        }\n    }\n    main.position(move_vector.target.x, move_vector.target.y)\n}\n\nfunction pushTop(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y - Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushBottom(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y + Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushLeft(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x - Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushRight(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x + Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nexport function getCellsBoundingBox(cells) {\n    let min_x = cells[0].attributes.position.x\n    let max_x = cells[0].attributes.attrs.rect.width + min_x\n    let min_y = cells[0].attributes.position.y\n    let max_y = cells[0].attributes.attrs.rect.height + min_y\n    for (let i = 1; i < cells.length; i++) {\n        let cell = cells[i];\n        let cellbbox = cell.getBoundingBox();\n        if (cellbbox.x < min_x) min_x = cellbbox.x;\n        if (cellbbox.y < min_y) min_y = cellbbox.y;\n        if (cellbbox.x + cellbbox.width > max_x) max_x = cellbbox.x + cellbbox.width;\n        if (cellbbox.y + cellbbox.height > max_y) max_y = cellbbox.y + cellbbox.height; \n    }\n    return {\n        x: min_x,\n        y: min_y,\n        width: max_x - min_x,\n        height: max_y - min_y\n    }\n}","export default __webpack_public_path__ + \"static/media/pop.cddf7df9.wav\";","export function cellInArray(cell, arr) {\n    for (const e of arr) {\n        if (cell.id === e.id) {\n            return true;\n        }\n    }\n    return false;\n} ","import * as joint from 'jointjs';\n\nimport { Cut } from '../../../shapes/Cut/Cut';\nimport { Premise } from '../../../shapes/Premise/Premise';\nimport { color } from '../../../util/color';\nimport { findSmallestCell, overlapsCells, contains, safeMove, getCellsBoundingBox, intersects } from '../../../util/collisions';\nimport Pop from '../../../sounds/pop.wav';\nimport Snip from '../../../sounds/snip.wav';\nimport $ from 'jquery'\nimport { cellInArray } from '../../../util/otherUtil';\nimport { find } from 'lodash';\n\nconst NSPremise = joint.dia.Element.define('nameSpace.Premise',Premise);\nconst NSCut = joint.dia.Element.define('nameSpace.Cut',Cut);\n\nconst DEFAULT_BACKGROUND_COLORS = {\n    even: color.shapes.background.even.inactive,\n    odd: color.shapes.background.odd.inactive,\n    premise: color.shapes.background.default.color\n}\n\nexport default class Sheet {\n    constructor(paper) {\n        this.paper = paper;\n        this.handlePlayAudio = paper.props.handlePlayAudio\n        this.graph = new joint.dia.Graph({}, {\n            cellNamespace: {\n                nameSpace: { \n                    Premise: NSPremise,\n                    Cut: NSCut\n                }\n            }\n        });\n        this.spacing = 10;\n    }\n\n    addPremise(config, mute, fast=false) {\n        const premise = (new Premise()).create(config, this, fast);\n        this.handleCollisions(premise);\n\n        // Play snip sound\n        let pop = new Audio(Pop); \n        this.handlePlayAudio(pop);\n\n        return premise;\n    }\n\n    addCut(config) {\n        const cut = (new Cut()).create(config, this);\n        this.handleCollisions(cut);\n\n        // Play snip sound\n        let snip = new Audio(Snip); \n        this.handlePlayAudio(snip);\n        return cut;\n    }\n\n    importCells(cells) {\n        const clones =  cells.map(cell => {\n            cell = cell.clone();\n            cell.sheet = this;\n            return cell;\n        })\n        this.graph.resetCells(clones);\n\n        for(let cell of clones) {\n            this.handleCollisions(cell)\n        }\n    }\n\n    exportAsJSON() {\n        const cells = this.graph.getCells();\n        const exported = cells.map(cell => Object.assign(cell.attributes, { sheet: null }));\n        const json = JSON.stringify(exported, null, 2);\n        return json;\n    }\n\n    //VERY SLOW, USE sheet.importCells(cells) instead if possible, which takes an array of cells\n    importFromJSON(json) {\n        const parsed = JSON.parse(json);\n        for (let cell of parsed) {\n            let new_element;\n            if (cell.type === 'dia.Element.Premise') {\n                new_element = this.addPremise(cell, true, true);\n            }\n            else if (cell.type === 'dia.Element.Cut') {\n                new_element = this.addCut(cell, true, true);\n            }\n            else {\n                throw new RangeError(`Cell type must be either dia.Element.Premise or dia.Element.Cut, got ${cell.type}`);\n            }\n\n            //fix for small outline box first time mousing over after importing\n            const dom_element = $(`svg [model-id=\"${new_element.attributes.id}\"]`);\n            dom_element.trigger('mouseenter');\n            dom_element.trigger('mouseleave');\n        }\n    }\n\n    //TODO: some of these functions kind of fit here and also kind of don't. I'm moving them here for now\n    // because in the future it would be beneficial to at least have a \"entire graph update\" be possible, which would be very simple to \n    // do if they are all bundled up.\n    handleCollisions(cell) {\n        console.log(\"=================== HANDLE COLLISIONS =========================\")\n        //This function takes a Cell as input and, using its position\n        // makes any necessary changes to the internal representation of\n        // the diagram (parent / child structure (embedding)) to reflect what the user\n        // sees on the paper\n        let cellbbox = cell.getBoundingBox();\n    \n        let potential_parents = this.findPotentialParents(cellbbox);\n        let parent = findSmallestCell(potential_parents);\n    \n        if (parent) {\n            let children = this.filterChildren(parent, cellbbox)\n            //embed cell into parent\n            parent.embed(cell);\n    \n            //reroot children\n            for (const child of children) {\n                if (child.get(\"parent\")) {\n                    parent.unembed(child);\n                }\n                cell.embed(child)\n            }\n            this.treeToFront(parent)\n        } else {\n            let elements_inside = this.findElementsInside(cellbbox)\n            for (const element of elements_inside) {\n                if (element.get(\"parent\") || element.id === cell.id) {\n                    continue;\n                }\n                cell.embed(element)\n            }\n            this.treeToFront(cell)\n        }\n        //recolor trees to reflect new level structure\n        this.colorByLevel(cell);\n        this.pack(cell);\n        this.cleanOverlaps();\n    }\n\n    pack(cell) {\n        let root = this.findRoot(cell);\n        console.log(\"ROOT EMBEDS\", root.getEmbeddedCells())\n        this.pack_rec(root);\n    }\n\n    pack_rec(cell) {\n        //let level = cell.attributes.attrs.level;\n        let siblings = cell.getEmbeddedCells()\n        console.log(\"siblings\", siblings)\n        if (siblings.length === 0) {\n            return;\n        }\n        for (const child of siblings) {\n            this.pack_rec(child);\n        }\n        //cell is inside a cut\n        //get siblings\n        this.cleanOverlaps(siblings);\n        let siblingsbbox = getCellsBoundingBox(siblings)\n        let cellbbox = cell.getBoundingBox()\n        if (!contains(cellbbox, siblingsbbox)) {\n            if (!intersects(cellbbox, siblingsbbox)) return;\n            if (siblingsbbox.x < cellbbox.x || siblingsbbox.x + siblingsbbox.width > cellbbox.x + cellbbox.width) {\n                cell.position(siblingsbbox.x - this.spacing, cell.attributes.position.y)\n                cell.attr(\"rect/width\", siblingsbbox.width + 2 * this.spacing)\n            }\n            if (siblingsbbox.y < cellbbox.y || siblingsbbox.y + siblingsbbox.height > cellbbox.y + cellbbox.height) {\n                cell.position(cell.attributes.position.x, siblingsbbox.y - this.spacing)\n                cell.attr(\"rect/height\", siblingsbbox.height + 2 * this.spacing)\n            }\n        }\n    }\n\n    cleanOverlaps(roots = this.getCellsByLevel(0)) {\n        // sort the roots from largest to smallest. this will cause a ripple effect,\n        // starting checks for overlaps at the largest cells and moving outward\n        roots.sort(function(a, b) {\n            return b.getArea() - a.getArea()\n        }) \n        let current = roots;\n        while (current.length > 0) {\n            let next = [];\n            //let total_overlaps = 0;\n            for (const cell of current) {\n                let overlaps = overlapsCells(cell, roots);\n\n                for (const invader of overlaps) {\n                    this.separate(cell, invader);\n                    let dupe = cellInArray(invader, next);\n                    if (!dupe) next.push(invader);\n                }\n            }\n            current = next;\n        }\n    }\n\n    separate(main, invader) {\n        //assumes main and invader partially overlap\n\n        let mainbbox = main.getBoundingBox();\n        let invaderbbox = invader.getBoundingBox();\n\n        //find the amount of each directional axis that the two cells occupy together\n        //whichever is lower will be chosen to reduce the movement of the invader the smallest possible distance\n\n        let shared_x = (mainbbox.x < invaderbbox.x) ? mainbbox.x + mainbbox.width - invaderbbox.x : mainbbox.x - invaderbbox.x - invaderbbox.width; \n        let shared_y = (mainbbox.y < invaderbbox.y) ? mainbbox.y + mainbbox.height - invaderbbox.y : mainbbox.y - invaderbbox.y - invaderbbox.height;\n\n        if (Math.abs(shared_x) > Math.abs(shared_y)) {\n            //make adjustment vertically (shorter change)\n            //if shared value is positive, then main is somewhat above the invader\n            let dir = Math.sign(shared_y);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x, y: invaderbbox.y + shared_y + (this.spacing * dir)});\n        } else {\n            //make adjustment horizontally (shorter change)\n            //if shared value is positive, then main is somewhat to the left of the invader\n            let dir = Math.sign(shared_x);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x + shared_x + (this.spacing * dir), y: invaderbbox.y});\n        }\n\n    }\n\n    getCellsByLevel(level) {\n        //returns an array of all cells with the matching level\n        let cells = this.graph.getCells();\n        let result = []\n        for (const cell of cells) {\n            if (cell.attributes.attrs.level === level) result.push(cell);\n        }\n        return result;\n    }\n\n    findElementsInside(bbox, cells=this.graph.getCells()) {\n        //takes two bbox objects as input\n        //bbox objects should have the structure:\n        // {\n        //      width: int,\n        //      height: int,\n        //      x: int,\n        //      y: int\n        // }\n        let elements = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            if (contains(bbox, otherbbox)) {\n                elements.push(cell)\n            }\n        }\n        return elements\n    }\n\n\n    findPotentialParents(targetbbox) {\n        // POTENTIAL PARENTS -- potential parents are only the cells that \n        //                      contain (completely) the CELL.\n        let cells = this.graph.getCells()\n        let potential_parents = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            //find cells who contain target cell\n            if (contains(otherbbox, targetbbox)) {\n                //console.log(\"potential parent found\")\n                potential_parents.push(cell)\n            }\n        }\n    \n        return potential_parents\n    }\n\n\n    filterChildren(parent, new_child_bbox) {\n        //function returns array of children who fit inside new child\n        let cells = this.graph.getCells();\n        let potential_children = [];\n        for (const cell of cells) {\n            if (!(cell.get(\"parent\")) || cell.get(\"parent\") === parent.id){\n                potential_children.push(cell)\n            }\n        }\n        let children = this.findElementsInside(new_child_bbox, potential_children)\n        return children;\n    }\n\n    treeToFront(root) {\n        //loops through a tree from its root to the leaves\n        //to ensure correct z order\n        let current = [root]\n        let next = []\n        while (current.length > 0) {\n            for (const node of current) {\n                //console.log(node);\n                node.toFront();\n                let children = node.getEmbeddedCells();\n                next.push(...children);\n            }\n            current = next\n            next = []\n        }\n    }\n\n\n    //i think these are graph related functions??? since they call handle collisions, tree stuff, etc which\n    //could be specific to a graph\n    addSubgraph(subgraph, position, selected = null) {\n        let root = subgraph[Object.keys(subgraph)[0]];\n        let root_clone = root.clone();\n        let new_root = this.subgraphToGraph(root, root_clone, subgraph)\n        this.treeMove(new_root, position);\n        if (selected && selected.attributes.type === \"dia.Element.Cut\") {\n            selected.embed(new_root);\n        }\n        this.handleCollisions(new_root)\n        return root_clone.id;\n    }\n\n    subgraphToGraph(node, clone, subgraph, parent=null) {\n        clone.sheet = this;\n        clone.addTo(this.graph);\n        if (parent != null) {\n            parent.embed(clone);\n        }\n        let embeds = node.get('embeds');\n        if (embeds){\n            for (const embed of embeds) {\n                let child = this.findCellInSubgraph(embed, subgraph);\n                this.subgraphToGraph(child, child.clone(), subgraph, clone);\n            }\n        }\n        return clone;\n    }\n\n    findCellInSubgraph(id, subgraph) {\n        let keys = Object.keys(subgraph);\n        for (const key of keys) {\n            let cell = subgraph[key];\n            if (cell.id === id) {\n                return cell;\n            }\n        }\n        alert(\"find subgraph failed!\");\n        return null;\n    }\n\n    //FIXME: these functions don't seem to be related to a specific graph, yet i'm not sure where to put them.\n    // I don't think just having them sit out in the open is a great idea either.\n    // Possibly we can just have these functions sit at the bottom of this file (outside of the class)\n    // We can't really make a class with these functions since the graph itself is the tree and we are just defining operations on it\n    //      - or maybe we can if we get creative, have to think more about it\n    treeResize(root, resize_value = 20, center_nodes = true) {\n        //resizes all the children of a root, not including the root\n        let current = root.getParentCell();\n        while (current) {\n            current.attr(\"rect/width\", current.attributes.attrs.rect.width + resize_value);\n            current.attr(\"rect/height\", current.attributes.attrs.rect.height + resize_value);\n            if (center_nodes) {\n                current.set(\"position\", {x: current.attributes.position.x - resize_value/2,\n                                         y: current.attributes.position.y - resize_value/2});\n            }\n            current = current.getParentCell();\n        }\n    }\n    \n    findRoot(node) {\n        while (true) {\n            if (node.get(\"parent\")) {\n                node = node.getParentCell();\n            } else {\n                break;\n            }\n        }\n        return node;\n    }\n    \n    findLevel(node) {\n        let level = 0;\n        let parent = node.getParentCell();\n        while (parent) {\n            level++;\n            parent = parent.getParentCell();\n        }\n        return level;\n    }\n    \n    colorByLevel(node, color_config = DEFAULT_BACKGROUND_COLORS) {\n        //find root of node's tree\n        let root = this.findRoot(node);\n        root.attr(\"level\", 0)\n    \n        if (root.attributes.type === \"dia.Element.Premise\") {\n            root.attr('rect/fill', color_config.premise);\n            return;\n        }\n        //otherwise its a cut root\n        root.attr(\"rect/fill\", color_config.odd)\n        let level = 0;\n        let children = root.getEmbeddedCells();\n        while(children.length > 0) {\n            level++\n            //the color applies to the level contained within the cut, not the level the cut is on\n            let parity = (level+1) % 2;\n            let next_children = []\n            for (const child of children) {\n                child.attr(\"level\", level);\n                if (child.attributes.type === \"dia.Element.Premise\") {\n                    child.attr(\"rect/fill\", color_config.premise)\n                    continue;\n                }\n                //coloring cut\n                child.attributes.attrs.level = level;\n                if (parity === 0) {\n                    child.attr(\"rect/fill\", color_config.even) \n                } else {\n                    child.attr(\"rect/fill\", color_config.odd);   \n                }                                 \n                next_children.push(...child.getEmbeddedCells());\n            }\n            children = next_children;\n        }\n    \n    }\n    \n    treeMove(root, position) {\n        let offset = {\n            x: position.x - root.attributes.position.x,\n            y: position.y - root.attributes.position.y\n        }\n        let current = [];\n        let next = [root];\n        while (next.length > 0) {\n            current = next;\n            next = [];\n            for (const node of current) {\n                next.push(...node.getEmbeddedCells());\n                //node.move({x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                //safeMove(node, {x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                node.position(node.attributes.position.x + offset.x, node.attributes.position.y + offset.y);\n            }\n        }\n    }\n\n\n}","import React from 'react';\nimport $ from 'jquery';\nimport * as joint from 'jointjs';\n\nimport Sheet from '../Sheet/Sheet';\n\nexport default class HistoryItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.jpaper = null;\n        this.sheet = new Sheet(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.num === this.props.total -1 ){\n            this.sheet.importCells(this.props.cells);\n            this.jpaper.scaleContentToFit();\n        }\n    }\n\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: 200,\n            height: 200,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.sheet.importCells(this.props.cells);\n        this.jpaper.scaleContentToFit();\n        this.jpaper.updateViews();\n\n        this.jpaper.setInteractivity(false);\n        \n        $(`#${this.props.id}`).on('mouseover', function() {\n            $(this).closest('.history-item').addClass('history-selected');\n            \n        });\n\n        $(`#${this.props.id}`).on('mouseout', function() {\n            $(this).closest('.history-item').removeClass('history-selected');\n        });\n    }\n\n    refresh() {\n\n    }\n\n    render() {\n        const style = {\n            backgroundColor: this.props.active ? '#ed6b4d' : ''\n        }\n        return(\n            <div class=\"history-item\"style={style}>\n                    <div \n                        id={this.props.id}\n                        class=\"joint-paper history-item-paper\"\n                        onClick={this.props.onClick}\n                    ></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport _ from 'lodash';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\n\nimport './History.css';\nimport HistoryItem from \"./HistoryItem\";\n\nexport default class History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.MAX_SIZE = 1024;\n\n        this.batch_mode = false;\n        this.batch_state = false;\n        this.locked = false;\n\n\n        this.state = {\n            data: [],\n            index: 0\n        }\n    }\n\n    handleJump = (num) => {\n        this.setState({\n            index: num\n        });\n        this.props.handleHistoryJump(this.getItem(num));\n    }\n\n    clear(callback) {\n        this.setState({\n            data: [],\n            index: 0\n        }, callback && callback);\n    }\n\n    push(item) {\n        if(this.locked) return;\n\n        if(this.batch_mode) {\n            this.batch_state = item\n            return;\n        }\n\n        const data = [...this.state.data];\n\n        if (this.state.index !== this.state.data.length - 1) {\n            //remove all states after current index\n            data.splice(this.state.index + 1);\n        }\n\n        data.push(item);\n        //remove from bottom of stack if we have more items than the max size allows\n        if (data.length >= this.MAX_SIZE) {\n            data.shift();\n        }\n\n        this.setState({\n            data: data,\n            index: data.length - 1\n        });\n    }\n\n    undo() {\n        let index = this.state.index;\n        if (this.state.index > 0) {\n            this.setState({\n                index: this.state.index - 1\n            });\n            index -= 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    redo() {\n        let index = this.state.index;\n        if (this.state.index < this.state.data.length - 1) {\n            this.setState({\n                index: this.state.index + 1\n            });\n            index += 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    getItem(index) {\n        return this.state.data[index];\n    }\n\n    lock() {\n        this.locked = true;\n    }\n\n    unlock() {\n        this.locked = false;\n    }\n\n    startBatch() {\n        this.batch_mode = true;\n        this.batch_state = null;\n    }\n\n    endBatch() {\n        this.batch_mode = false;\n        if (this.batch_state !== null) {\n            this.push(this.batch_state);\n        }\n    }\n\n    render() {\n        return (\n            <div class=\"history\">\n                {\n                    this.state.data.map((history_item, num) => (\n                        (num === 0) ?  null :\n                        <HistoryItem \n                            num={num}\n                            total={this.state.data.length}\n                            id={this.props.id_prefix + num}\n                            cells={history_item}\n                            active={this.state.index === num}\n                            onClick={this.handleJump.bind(this, num)}\n                            key={num}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport _ from 'lodash';\n\nimport './UtilBar.css';\n\nexport default class UtilBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: -1\n        }\n    }\n\n    handleChangeActive = (num) => {\n        this.setState({\n            active: num === this.state.active ? -1 : num\n        });\n    }\n\n    render() {\n        return (\n            <div class=\"util-bar-root\">\n                { \n                    //loop through children and pass active prop to child whose index corresponds to\n                    //this.state.active\n                    // Ex. if History is the first child (index 0), then when this.state.active === 0 \n                    //then History will be passed active=true  as a prop\n                    React.Children.map(this.props.children, (child, num) => {\n                        if (React.isValidElement(child)) {\n                            return React.cloneElement(child, {\n                                active: this.state.active === num,\n                                handleChangeActive: this.handleChangeActive.bind(this, num)\n                            });\n                        }\n                        return child;\n                    })\n                }\n            </div>\n        );\n    }\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst UtilBarItem = (props) => {\n    return (\n        <div class=\"util-bar-item-root\">\n            <FontAwesomeIcon icon={props.icon} className=\"util-bar-item-icon\" onClick={props.handleChangeActive} />\n            <div class={`util-bar-active-menu ${props.active === false ? 'visually-hidden' : ''}`}>\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default UtilBarItem;","import React from 'react';\nimport * as joint from 'jointjs'\nimport E from '../../EventController.js';\nimport _ from 'lodash';\nimport $ from 'jquery'\n\nimport Delete from '../../sounds/delete.wav';\nimport Sheet from './Sheet/Sheet.js';\nimport History from './History/History.jsx'\n\nimport './Paper.css';   \nimport UtilBar from './UtilBar/UtilBar.jsx';\nimport UtilBarItem from './UtilBar/UtilBarItem.jsx';\nimport './UtilBar/UtilBar.css';\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\n\nconst PAPER_SIZE = { width: 4000, height: 4000 };\n\nexport default class Paper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sheet = new Sheet(this);\n        this.jpaper = null;\n        this.paper_element = null;\n        this.paperRoot = React.createRef();\n    \n        this.selected_premise = null;\n        this.saved_template = null;\n        this.temp_cut = null;\n        this.initial_cut_pos = {x: 0, y: 0};\n        this.canInsertPremise = true;\n        this.previousPremiseCode = 0;\n\n        this.state = {\n            show: true\n        }\n\n        this.UtilBar = React.createRef();\n        this.history = React.createRef();\n    }\n\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: PAPER_SIZE.width,\n            height: PAPER_SIZE.height,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.paper_element = document.getElementById(this.props.id);\n        \n        this.setPaperEvents();\n        this.history.current.push(this.sheet.exportAsJSON());\n    }\n\n    handleHistoryJump = (cells) => {\n        this.history.current.lock();\n        this.sheet.importCells(cells);\n        this.history.current.unlock();\n    }\n\n    onGraphUpdate() {\n        //const new_graph = this.sheet.exportAsJSON();\n        //const cells = Object.values(this.sheet.graph.cloneCells(this.sheet.graph.getCells()));\n        const cells = this.sheet.graph.getCells()\n        this.history.current.push(cells);\n    }\n\n    show() {\n        $(this.paperRoot.current).css('display', 'flex');\n    }\n\n    hide() {\n        $(this.paperRoot.current).css('display', 'none');\n    }\n\n    //assume that if there is no workspace associated then we are in create mode\n    getMode() {\n        return this.props.mode || 'create';\n    }\n\n    setupModalPaper() {\n        this.sheet.graph.clear();\n    }\n\n    copyFrom(sourcePaper) {\n        const modal_cells = sourcePaper.sheet.graph.getCells();\n        for (let i = 0; i < modal_cells.length; i++) {\n            modal_cells[i] = modal_cells[i].clone();\n            modal_cells[i].graph = this.sheet.graph;\n        }\n        this.sheet.graph.addCells(modal_cells);\n    }\n\n    setPaperEvents(){\n        // paper events\n        //arrow functions are required to keep proper this context binding\n        this.jpaper.on(\"element:mouseenter\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            modelView.showTools()\n            model.attr(\"rect/stroke\", \"red\")\n            model.attr(\"text/fill\", \"red\")\n            this.selected_premise = model\n        });\n\n        this.jpaper.on(\"element:mouseleave\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            if(!modelView) return;\n            modelView.hideTools()\n            model.attr(\"rect/stroke\", \"black\")\n            model.attr(\"text/fill\", \"black\")\n            this.selected_premise = undefined;\n        })\n\n        // First, unembed the cell that has just been grabbed by the user.\n        this.jpaper.on('cell:pointerdown', (cellView, evt, x, y) => {\n            \n            console.log(cellView)\n            let cell = cellView.model;\n            console.log(\"cell\", cell)\n\n            if (!cell.get('embeds') || cell.get('embeds').length === 0) {\n                // Show the dragged element above all the other cells (except when the\n                // element is a parent).\n                cell.toFront();\n            }\n            \n            if (cell.get('parent')) {\n                this.sheet.graph.getCell(cell.get('parent')).unembed(cell);\n            }\n            cell.active();\n            this.sheet.treeToFront(this.sheet.findRoot(cell));\n        });\n\n        // When the dragged cell is dropped over another cell, let it become a child of the\n        // element below.\n        this.jpaper.on('cell:pointerup', (cellView, evt, x, y) => {\n\n            let cell = cellView.model;\n            \n            this.sheet.handleCollisions(cell)\n            cell.inactive();\n\n            if(!this.props.action) this.onGraphUpdate();\n            let nextAction;\n            if (this.props.action) {\n                nextAction = this.props.action(this.sheet, cell, this.getRelativeMousePos());\n            }\n            if (this.props.handleClearAction && !nextAction) this.props.handleClearAction();\n            if(nextAction) this.props.handleActionChange(nextAction);\n            this.selected_premise = null;\n        });\n\n        this.sheet.graph.on('add', () => {\n            this.onGraphUpdate();\n        });\n\n        //PAPER UNDO AND REDO EVENTS\n        $(this.paperRoot.current).on('keydown', (event) => {\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && !event.shiftKey) {\n                const new_state = this.history.current.undo();\n                //only update graph if new state exists\n                //undo will return false if can't undo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                const new_state = this.history.current.redo();\n                //only update graph if new state exists\n                //redo will return false if can't redo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n        });\n    }\n\n    handleDeleteCell = () => {\n        this.onGraphUpdate();\n    }\n\n    onClick = () => {\n        console.log('clicked', this);\n    }\n\n    onKeyUp = (event) => {\n        if(event.keyCode === this.previousPremiseCode) this.canInsertPremise = true;\n    }\n\n    onKeyDown = (event) => {\n        if(this.getMode() === 'proof'){\n            return;\n        }\n\n        if(this.getMode() === 'create'){\n            if (E.keys[16]) {\n                this.jpaper.setInteractivity(false);\n            }\n        }\n\n        //backspace (delete premise or cut)\n        if (event.keyCode === 8) {\n            if (this.selected_premise) {\n                let delete_noise = new Audio(Delete); \n                if (this.selected_premise.attributes.type === \"dia.Element.Premise\") {\n                    this.selected_premise.destroy()\n                    this.props.handlePlayAudio(delete_noise);\n                } else if (this.selected_premise.attributes.type === \"dia.Element.Cut\") {\n                    this.selected_premise.destroy();        // Play pop sound\n                    this.props.handlePlayAudio(delete_noise);\n                } else {\n                    console.error(\"attempted to delete shape of unknown type: \" + this.selected_premise.attributes.type)\n                }\n            }\n            this.selected_premise = null;\n        }\n\n        //a-z for creating premise\n        const key = event.key.toLocaleUpperCase();\n        const code = key.charCodeAt(0);\n        if (this.canInsertPremise && key.length === 1 && !(event.ctrlKey || event.metaKey) && code >= 65 && code <= 90) {\n            let config = {\n                //use capital letters by default, can press shift to make lowercase\n                attrs:{\n                    text: {\n                        text: key\n                    }\n                },\n                position: this.getRelativeMousePos()\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Premise().create(config)\n            this.sheet.addPremise(config);\n            this.canInsertPremise = false;\n            this.previousPremiseCode = code;\n        }\n        //ENTER\n        // new cut\n        if (event.keyCode === 13) {\n            let config = {\n                position: this.getRelativeMousePos()\n            }\n            if (this.selected_premise) {\n                config[\"child\"] = this.selected_premise;\n                this.sheet.addCut(config);\n            } else {\n                //console.log(\"creating empty cut\")\n                const new_cut = this.sheet.addCut(config);\n                //console.log(\"cut\", new_cut)\n            }\n        }\n    \n        if (event.keyCode === 49) {\n            //save template\n            if (this.selected_premise) {\n                this.saved_template = this.sheet.graph.cloneSubgraph([this.selected_premise], {deep: true});\n            }\n        }\n    \n        if (event.keyCode === 50) {\n            const mouse_adjusted = this.getRelativeMousePos();\n            //console.log(\"position\", mouse_adjusted)\n            if (this.saved_template) {\n                this.sheet.addSubgraph(this.saved_template, mouse_adjusted, this.selected_premise);\n            }\n        }\n    }\n\n    onMouseDown = (event) => {\n        //console.log('mousedown', this);\n        if (E.keys[16] && this.getMode() === 'create') {\n            this.initial_cut_pos = Object.assign({}, E.mousePosition);\n            this.initial_cut_pos.x -= this.paper_element.getBoundingClientRect().left;\n            this.initial_cut_pos.y -= this.paper_element.getBoundingClientRect().top;\n            let config  = {\n                position: Object.assign({}, this.initial_cut_pos),\n                size: {width: 0, height: 0}\n            }\n            //this.temp_cut = new Cut().create(config);\n            this.history.current.lock();\n            this.temp_cut = this.sheet.addCut(config);\n            this.temp_cut.active();\n            event.preventDefault();\n            //console.log(\"CREATED TEMP CUT\", this.temp_cut);\n        }\n    }\n\n    onMouseUp = () => {\n        //console.log('mouseup', this);\n        if (this.getMode() === 'proof') {\n            this.history.current.startBatch();\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'insertDoubleCut') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'bound iterationend') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            this.history.current.endBatch();\n        }\n        if (this.temp_cut && this.getMode() === 'create') {\n            const position = _.clone(this.temp_cut.get('position'));\n            const size = _.clone({width: this.temp_cut.attr('rect/width'), height: this.temp_cut.attr('rect/height')});\n            const config = {\n                position: position,\n                attrs:{\n                    rect: {\n                        ...size\n                    }\n                }\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Cut().create(config);\n            //console.log('mouse released, deleting temp cut...');\n            this.temp_cut.remove();\n            this.history.current.unlock();\n            //NOTE: Temp cut must be deleted first or there will be uwnanted conflicts with  collisions\n            this.sheet.addCut(config);\n        }\n    \n        this.jpaper.setInteractivity(true);\n        this.temp_cut = null;\n    }\n\n    onMouseMove = () => {\n        //console.log('mousemove', this);\n        if(this.getMode() === 'create'){\n            //console.log(E.isMouseDown);\n            if (E.isMouseDown && E.keys[16] && this.temp_cut) {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.temp_cut.set('position', {\n                    x: Math.min(mouse_adjusted.x, this.initial_cut_pos.x),\n                    y: Math.min(mouse_adjusted.y, this.initial_cut_pos.y)\n                });\n                this.temp_cut.attr('rect/width', Math.abs(mouse_adjusted.x - this.initial_cut_pos.x));\n                this.temp_cut.attr('rect/height', Math.abs(mouse_adjusted.y - this.initial_cut_pos.y));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        this.paper_element.focus();\n    }\n\n    getRelativeMousePos() {\n        return {\n            x: E.mousePosition.x - this.paper_element.getBoundingClientRect().left,\n            y: E.mousePosition.y - this.paper_element.getBoundingClientRect().top\n        };\n    }\n\n    render() {\n        if (!this.state.show) return null;\n        const styles = {\n            width: this.props.wrapperWidth || '100%',\n            height: this.props.wrapperHeight || '100%'\n        }\n\n        return(\n            <div class=\"paper-root\" ref={this.paperRoot}>\n                <div class=\"paper-wrapper\" style={styles}>\n                    <div \n                        id={this.props.id}\n                        class=\"joint-paper\"\n                        onClick={this.onClick}\n                        onKeyDown={(event) => this.onKeyDown(event)}\n                        onKeyUp={(event) => this.onKeyUp(event)}\n                        onMouseDown={(event) => this.onMouseDown(event)}\n                        onMouseUp={this.onMouseUp}\n                        onMouseMove={this.onMouseMove}\n                        onMouseEnter={this.onMouseEnter}\n                        tabIndex=\"0\"\n                    ></div>\n                </div>\n                <UtilBar ref={this.UtilBar}>\n                    <UtilBarItem icon={faHistory}>\n                        <History \n                            ref={this.history} \n                            id_prefix={`${this.props.id}-`}\n                            handleHistoryJump={this.handleHistoryJump}\n                            handleInitializeHistory={this.handleInitializeHistory}\n                        />\n                    </UtilBarItem>\n                </UtilBar>\n            </div>\n        );\n    }\n}\n\nexport function initializeContainerDrag(container_id){\n    const ele = document.getElementById(container_id);\n    ele.style.cursor = 'default';\n  \n      let pos = { top: 0, left: 0, x: 0, y: 0 };\n  \n      const mouseDownHandler = function(e) {\n          if (!E.keys[16]) return;\n          ele.style.cursor = 'grabbing';\n          ele.style.userSelect = 'none';\n  \n          pos = {\n              left: ele.scrollLeft,\n              top: ele.scrollTop,\n              // Get the current mouse position\n              x: e.clientX,\n              y: e.clientY,\n          };\n  \n          ele.addEventListener('mousemove', mouseMoveHandler);\n          ele.addEventListener('mouseup', mouseUpHandler);\n      };\n  \n      const mouseMoveHandler = function(e) {\n          // How far the mouse has been moved\n          const dx = e.clientX - pos.x;\n          const dy = e.clientY - pos.y;\n  \n          // Scroll the element\n          ele.scrollTop = pos.top - dy;\n          ele.scrollLeft = pos.left - dx;\n      };\n    \n      const mouseUpHandler = function() {\n          ele.style.cursor = 'default';\n          ele.style.removeProperty('user-select');\n  \n          ele.removeEventListener('mousemove', mouseMoveHandler);\n          ele.removeEventListener('mouseup', mouseUpHandler);\n      };\n  \n      // Attach the handler\n      ele.addEventListener('mousedown', mouseDownHandler);\n  }","import React from 'react';\n\nimport './Button.css';\n\nexport default class Button extends React.Component {\n    render() {\n        return (\n            <button className='button-group-button' onClick={this.props.onClick}>{this.props.text}</button>\n        );\n    }\n}","import React from 'react';\n\nimport Button from '../Button/Button';\n\nimport './ButtonGroup.css';\n\nexport default class ButtonGroup extends React.Component {\n    render() {\n        return (\n            <div className=\"button-group\">\n                {this.props.buttons.map(button => <Button key={button.text} text={button.text} onClick={button.onClick}/>)}\n            </div>\n        );\n    }\n}","import { Cut } from \"../shapes/Cut/Cut\"\nimport  { handleCollisions} from './collisions.js'\nimport E from '../EventController.js'\n\n\n\nexport const inferenceInsertion = function(sheet, model, mousePosition) {\n  console.log('ARGS', arguments);\n  if(model.__proto__.constructor.name == \"Cut\" && (model.attributes.level) % 2 === 0) return;\n  console.log('opening modal...')\n  const paper = sheet.paper;\n  paper.props.handleOpenModal(mousePosition);\n}\n\nexport const inferenceErasure = function(sheet, model) {\n  console.log(model.attributes.attrs.level)\n  if(model.attributes.attrs.level % 2 === 0) {\n    const children = model.getEmbeddedCells({deep: true});\n    const parent = sheet.graph.getCell(model.attributes.parent);\n\n    model.destroy();\n    for (let i = 0; i < children.length; i++){\n      children[i].destroy();\n    }\n\n    if(parent) {\n      sheet.handleCollisions(parent);\n    }\n  }\n}\n\nexport const insertDoubleCut = function(sheet, model, mousePosition={}) {\n    let position = {};\n    let size = {}\n    if (!model && mousePosition) {\n        position = mousePosition;\n        size = { width: 80, height: 80 }\n    }\n    else if (model){\n        position = model.get('position');\n        size = { width: model.attr('rect/width'), height: model.attr('rect/height') }\n    }\n    else {\n        throw new Error('Bad arguments');\n    }\n    const multipliers = [0.8, 0.25];\n    for(let i = 0; i < multipliers.length; i++) { \n        sheet.addCut({\n            position:  {\n              x: position.x - (size.width * multipliers[i]/2),\n              y: position.y - (size.height * multipliers[i]/2)\n            },\n            attrs: {\n                rect: {\n                    width: size.width * (1 + multipliers[i]),\n                    height: size.height * (1 + multipliers[i])\n                }\n            }\n        });\n    }  \n}\n\nexport const deleteDoubleCut = function(sheet, model) {\n    console.log(\"MODEL: \", model);\n    const graph = sheet.graph;\n    if(model.__proto__.constructor.name === \"Cut\" && model.attributes.embeds?.length === 1 && \n        graph.getCell(model.attributes.embeds[0]).__proto__.constructor.name === \"Cut\") {\n        const children = graph.getCell(model.attributes.embeds[0]).attributes.embeds;\n        graph.getCell(model.attributes.embeds[0]).destroy();\n        model.destroy();\n        if(model.attributes.parent) {\n          sheet.handleCollisions(graph.getCell(model.attributes.parent));\n        }\n        else {\n          children?.forEach(element => {\n              if(graph.getCell(element).__proto__.constructor.name === \"Cut\") {\n                sheet.handleCollisions(graph.getCell(element))\n              }\n          });\n        }\n    }\n}\n\nexport const iteration = function(sheet, model) {\n  return iterationend.bind(null, model);\n}\n\nconst iterationend = function(model, sheet, model_clone, mousePosition={}) {\n  let subgraph = sheet.graph.cloneSubgraph([model], {deep: true});\n  let sub_id = sheet.addSubgraph(subgraph, mousePosition, model_clone);\n  \n  subgraph = sheet.graph.getCell(sub_id);\n  if(!legalIteration(sheet,model,subgraph)) {\n    obliterate(sheet, subgraph);\n  }\n}\n\nexport const deiteration = function(sheet, model) {\n  const model_id = model.id;\n\n  let ancestor = model;\n  while(ancestor.attributes.parent) {\n    //  Iterate up to parent\n    ancestor = sheet.graph.getCell(ancestor.attributes.parent);\n\n    //  Parent must be of type cut, however we check for redundancy\n    if(ancestor.__proto__.constructor.name !== \"Cut\") {\n      console.error(\"Parent is of type \" + ancestor.__proto__.constructor.name + \". Expected Cut. Contact administrator.\" );\n      return;\n    }\n\n    //  Now, recursivly check all premises in the cut and look for a matching subgraph\n    let children = ancestor.attributes.embeds\n\n    children?.forEach(element => {\n      let child = sheet.graph.getCell(element);\n        //Check if premise text is the same and if premise id is dissimilar\n        if(child.id !== model_id &&\n        matchingModel(sheet, model, child)) {\n          //  Remove desired element and return\n          obliterate(sheet, model);\n          return;\n        }\n    });\n  }\n\n  //  Finally, check sheet of assertion becuase of Joey's \"Multi-tree\" theory...\n\n  let all_models = sheet.graph.attributes.cells.models;\n\n  all_models?.forEach(element => {\n    let child = sheet.graph.getCell(element);\n    if(child?.attributes.attrs.level === 0 && \n    child?.id !== model_id &&\n    matchingModel(sheet, model,child)) {\n      //  Remove desired element and return\n      obliterate(sheet, model);\n      return;\n      }\n  });\n} \n\n\n/**\n * Returns if two subgraphs match.\n * @param {Sheet} sheet - The sheet the two subgraphs are contained by.\n * @param {Cell} model_one - The root cell of the first subgraph.\n * @param {Cell} model_two - The root cell of the second subgraph.\n * @returns {Boolean} - If the two subgraphs match.\n */\nfunction matchingModel(sheet, model_one, model_two) {\n    \n  //  If comparing premise to a cut, return false\n  if(model_one.__proto__.constructor.name !== model_two.__proto__.constructor.name) return false;\n\n  //  If comparing a premise to a premise, return based on text\n  if (model_one.__proto__.constructor.name === \"Premise\") {\n    return model_one.attributes.attrs.text.text === model_two.attributes.attrs.text.text;\n  }\n\n  //  If comparing a cut, return based on a match to all children\n  if(model_one.__proto__.constructor.name === \"Cut\") {\n    \n    // Get the children of each cut\n    let model_one_children = [...(model_one.attributes.embeds || [])];\n    let model_two_children = [...(model_two.attributes.embeds || [])];\n\n    //  If both embeds dont exist\n    if(!model_one_children && !model_two_children) return true;\n    \n    //  If dissimilar sizes, return false\n    if(model_one_children.length !== model_two_children.length) return false;\n\n    //  Match children until children array are of size zero, or all options are exaughsted\n    //  Runtime : O(n^2) where n = number of children per model.\n    //  To attempt optimization, search for \"Graph Isomorphism Problem\"\n    outer:\n    while(model_one_children.length > 0) {\n      let child = sheet.graph.getCell(model_one_children[0]);\n\n      //  Iterate through all children of model_two and compare to child\n      for (let i = 0; i < model_two_children.length; i++) {\n        if(matchingModel(sheet, child, sheet.graph.getCell(model_two_children[i]))) {\n          //  Remove the elements from the arrays\n          model_one_children.shift() // Removes the first index\n          model_two_children.splice(i, 1) //  Removes index i\n          continue outer;\n         }\n      }\n      //  If you get here, it didn't match :(\n      return false;\n    }\n    //  If you get here, it matched! Congrats! :)\n    return true;\n  }\n  //  If comparing something other than a premise or cut, contact an administatior\n  console.error(\"Can not compare models of type \" + model_one.__proto__.constructor.name + \". Contact administrator\");\n  return false;\n}\n\n/**\n * Destroys the root and all decendants.\n * @param {Sheet} sheet - The sheet the subgraph is contained by.\n * @param {Cell} model - Root of subgraph to be destroyed.\n */\nfunction obliterate(sheet, model) {\n  //  If premise or empty cell\n  if(model.__proto__.constructor.name === \"Premise\" || model.attributes.embeds?.length === 0) {\n    model.destroy();\n    console.log('ballse');\n    return;\n  }\n\n  //  If non-empty cell, destroy all children\n  let children = model.attributes.embeds;\n  children.forEach(child => {obliterate(sheet, sheet.graph.getCell(child))});\n  //  Then destroy self\n  model.destroy();\n\n\n\n}\n\n/**\n * Returns if a iteration is legal\n * @param {Sheet} sheet - The sheet the subgraphs are contained by.\n * @param {Cell} model - The origin subgraph.\n * @param {Cell} model_clone - The clone of the origin subgraph\n * @returns {Boolean} - If the iteration is legal.\n */\nfunction legalIteration(sheet, model, model_clone) {\n  //  First, confirm the two models are the same.\n  if(!matchingModel(sheet, model,model_clone)) {\n    console.error(\"Model discrepency when detecting legality of iteration.\");\n    return false;\n  }\n  //  If the first model is on the sheet of assertion return true\n  if(model.attributes.attrs.level === 0) { return true; }\n\n  //  If the clone is on a lower level than the origin, return false\n  if(model.attributes.attrs.level > model_clone.attributes.attrs.level) { return false; }\n\n  //  Add all sibling cuts to a list (all children of parent, remove self)\n  let search = [...sheet.graph.getCell(model.attributes.parent).attributes.embeds];\n  search.splice(search.indexOf(model.id, 1));\n\n  //Iterativly search\n\n  while(search.length > 0) {\n    let current = search.shift();\n    //  Check if it is clone\n    if( current === model_clone.id) {\n      return true;\n    }\n    //  If it is a cut, add all children\n    if(sheet.graph.getCell(current).__proto__.constructor.name === \"Cut\") {\n      sheet.graph.getCell(current).attributes.embeds?.forEach( element => {\n        search.push(element);\n      });\n    }\n  }\n\n  //  If you get here, it's illegal! >:o\n  return false;\n}","import React from 'react';\n\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\nimport Button from '../Button/Button';\n\nimport './SideBar.css';\nimport { deiteration, deleteDoubleCut, inferenceErasure, inferenceInsertion, insertDoubleCut, iteration } from '../../util/proof-util';\n\nexport default class SideBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttons: {\n                create: [\n                    {\n                        text: 'Add Premise',\n                        onClick: () => {\n                            console.log('Adding premise...')\n                        }\n                    },\n                    {\n                        text: 'Cut',\n                        onClick: () => {\n                            console.log('Cutting...');\n                        }\n                    }\n                ],\n                proof: [\n                    {\n                        text: 'Insertion',\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceInsertion);\n                            console.log('Loading insertion into action...');\n                        }\n                    },\n                    {\n                        text: 'Erasure',\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceErasure);\n                            console.log('Performing erasure...');\n                        }\n                    },\n                    {\n                        text: 'Insert Double Cut',\n                        onClick: () => {\n                            this.props.handleActionChange(insertDoubleCut);\n                            console.log('Inserting double cut...');\n                        }\n                    },\n                    {\n                        text: 'Delete Double Cut',\n                        onClick: () => {\n                            this.props.handleActionChange(deleteDoubleCut);\n                            console.log('Deleting double cut...');\n                        }\n                    },\n                    {\n                        text: 'Iteration',\n                        onClick: () => {\n                            this.props.handleActionChange(iteration);\n                            console.log('Performing iteration...');\n                        }\n                    },\n                    {\n                        text: 'Deiteration',\n                        onClick: () => {\n                            this.props.handleActionChange(deiteration);\n                            console.log('Performing deiteration...');\n                        }\n                    }\n                ]\n            },\n            color : {\n                text : {\n                    create : \"#E0FBFC\",\n                    proof : \"#293241\"\n                },\n                background : {\n                    create : \"#3D5A80\",\n                    proof : \"#98C1D9\"\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"menu-bar\" style={{backgroundColor: this.state.color.background[this.props.mode] , color: this.state.color.text[this.props.mode]}}>\n                <div id=\"side-wrapper\" >\n                    <h2 >{this.props.mode.charAt(0).toUpperCase() + this.props.mode.slice(1)} Mode</h2>\n                    <Button text=\"Switch Mode\" onClick={this.props.onStateSwitch}></Button>\n                    <ButtonGroup buttons={this.state.buttons[this.props.mode]} mode={this.props.mode}/>\n                </div>\n            </div>\n        ); \n    }\n}\n\n","import React from 'react';\n\nimport './Modal.css'\n\nexport default class Modal extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (!this.props.show) {\n            console.log('early');\n            return null;\n        }\n        console.log('rendering...');\n        return (\n            <div class='modal-bg'>\n                <div class='modal-body'>\n                    <div class=\"modal-top-bar\">\n                        { this.props.buttons.map(b => \n                            <button key={b.name} class={`modal-item modal-item-${b.name}`} onClick={b.onClick}>{b.text}</button>\n                        )}\n                        {/* <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button>\n                        <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button> */}\n                    </div>\n                    <div class=\"modal-content\">\n                        { this.props.children }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}   ","import React from 'react';\nimport { act } from 'react-dom/test-utils';\nimport Paper from '../Paper/Paper';\nimport SideBar from '../SideBar/SideBar';\nimport Modal from '../Modal/Modal.jsx';\nimport _ from 'lodash';\n\nimport './Workspace.css'\nimport E from '../../EventController';\n\nconst LOAD_MODAL = new Event('load-modal');\n\nexport default class Workspace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'create',\n            action: null,\n            showModal: false\n        }\n        this.insertPosition = { x: 0, y: 0 };\n        this.modalPaper = React.createRef();\n        this.mainPaper = React.createRef();\n        this.proofPaper = React.createRef();\n        this.history = [];\n    }\n\n    componentDidMount() {\n        this.proofPaper.current.hide();\n        this.proofPaper.current.history.current.clear();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        // //if state.mode changed\n         if (prevState.mode !== this.state.mode) {\n            //switch to proof mode\n            if (this.state.mode === 'proof') {\n                this.mainPaper.current.hide();\n                this.proofPaper.current.sheet.graph.clear();\n                const copy = this.mainPaper.current.sheet.exportAsJSON();\n                this.proofPaper.current.sheet.importFromJSON(copy);\n                this.proofPaper.current.show();\n            }\n            //switch to create mode\n            else {\n                this.mainPaper.current.show();\n                this.proofPaper.current.hide();\n                this.proofPaper.current.history.current.clear();\n            }\n        }\n    }\n\n    handleStateSwitch() {\n        this.setState({\n            mode: this.state.mode === 'create' ? 'proof' : 'create'\n        });\n    }\n\n    handleActionChange = (action) => {\n        this.setState({\n            action: action\n        });\n    }\n\n    handleClearAction(){\n        this.handleActionChange(null);\n    }\n\n    //TODO: MOVE MODAL TO WORKSPACE\n    handleModalExit = () => {\n        this.setState({\n            showModal: false\n        });\n    }\n\n    handleOpenModal = (mousePosition) => {\n        this.setState({\n            showModal: true\n        })\n        this.insertPosition = Object.assign({}, mousePosition);\n    }\n\n    handleModalInsert = (position) => {\n        console.log('inserting...');\n        this.proofPaper.current.sheet.importFromJSON(this.modalPaper.current.sheet.exportAsJSON());\n        this.handleModalExit();\n    }\n\n    render() {\n\n        const buttons = [\n            {\n                name: 'insert',\n                text: 'Insert',\n                onClick: this.handleModalInsert\n            },\n            {\n                name: 'cancel',\n                text: 'X',\n                onClick: this.handleModalExit\n            },\n        ]\n\n        return (\n            <div class=\"workspace\">\n                <SideBar  \n                    mode={this.state.mode} \n                    onStateSwitch={this.handleStateSwitch.bind(this)} \n                    handleActionChange={this.handleActionChange.bind(this)}\n                >\n                </SideBar>\n                <Paper \n                    id={this.props.paper_id} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.mainPaper}\n                >\n                </Paper>\n\n                <Paper \n                    id={this.props.paper_id + '-proof-paper'} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.proofPaper}\n                >\n                </Paper>\n\n\n                <Modal show={this.state.showModal} buttons={buttons}>\n                    <Paper \n                        id={this.props.paper_id + '-modal-paper'} \n                        mode={'create'} \n                        action={null}\n                        handleClearAction={null}\n                        handleActionChange={null}\n                        handleOpenModal={null}\n                        handlePlayAudio={this.props.handlePlayAudio}\n                        wrapperWidth='100%'\n                        wrapperHeight='72vh'\n                        ref={this.modalPaper}\n                    >\n                    </Paper>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport '../../index.css'; \nimport MenuBar from '../MenuBar/MenuBar.jsx';\nimport Workspace from '../Workspace/Workspace.jsx';\nimport $ from 'jquery'\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.workspace = React.createRef();\n        this.sound = null;\n        this.state = {\n            muted: true\n        }\n    }\n\n    componentDidMount() {\n        console.log('WORKSPACE', this.workspace);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.muted && this.sound) {\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n    }\n\n    handleMuteToggle = () => {\n        this.setState({\n            muted: !this.state.muted\n        });\n\n        const mute_button = getMenuItem(\"Toggle Sound\");\n        const mute_button_label = mute_button.find('.menu-item-label');\n        mute_button.toggleClass('mute-active');\n\n        if (mute_button.hasClass('mute-active')) {\n            mute_button_label.html('Unmute');\n        }\n        else {\n            mute_button_label.html('Mute');\n        }\n        \n    }\n\n    handlePlayAudio = (audio) => {\n        if (this.state.muted) return;\n        this.sound = audio;\n        this.sound.play();\n    }\n\n    render() {\n        return (\n            <div id=\"app\" className=\"app\">\n                <MenuBar id=\"header\" muted={this.state.muted} handleMuteToggle={this.handleMuteToggle}/>\n                <Workspace paper_id=\"main-paper\" ref={this.workspace} handlePlayAudio={this.handlePlayAudio}></Workspace>\n            </div>\n        );\n    }\n}\n\n\nfunction getMenuItem(item_label) {\n    return $('.header-bar').find(`[aria-label=\"${item_label}\"]`)\n}","import ReactDOM from 'react-dom';\nimport * as joint from 'jointjs';\nimport App from './components/App/App';\nimport  _  from 'lodash'\n\nconsole.log(\"Starting...\");\nwindow.joint = joint;\n\nwindow.action = null; \nwindow.mode = 'create';\n\n// const NSPremise = joint.dia.Element.define('nameSpace.Premise',Premise);\n// const NSCut = joint.dia.Element.define('nameSpace.Cut',Cut);\n\nconst APP = ReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\nconsole.log(APP);\nconsole.log(APP.workspace);\n\n// let selected_premise = undefined;\n// let saved_template = undefined;\n\n// export let graph = new joint.dia.Graph({},{cellNamespace: \n//     {\n//     nameSpace: { Premise: NSPremise,\n//                  Cut: NSCut }\n//   }\n// });\n\n// const PAPER_SIZE = { width: 4000, height: 4000 };\n\n// export let paper = new joint.dia.Paper({\n//     el: document.getElementById(\"paper-container\"),\n//     model: graph,\n//     height: PAPER_SIZE.height,\n//     width: PAPER_SIZE.width,\n//     preventContextMenu: false,\n//     clickThreshold: 1,\n// },\n// {cellViewNamespace: \n//     {\n//     nameSpace: { Premise: NSPremise,\n//                  Cut: NSCut }\n//   }});\n\n// let rect = new Premise().create()\n// rect.position(100, 30);\n\n// let mousePosition = {\n//     x: 0,\n//     y: 0\n// }\n\n// const paperContainer = document.getElementById('paper-container');\n\n\n// const keys = [];\n// let mouse_down = false;\n// let temp_cut = undefined;\n// let initial_cut_pos = {}\n\n// $(document).on('keydown', function(event) {\n//     keys[event.which] = true;\n//     if(window.mode === 'create'){\n//         if (keys[16]) {\n//             paper.setInteractivity(false);\n//         }\n//     }\n// });\n\n// document.addEventListener(\"mousemove\", function(evt){\n    // mousePosition = {\n    //     x: evt.clientX,\n    //     y: evt.clientY\n    // }\n\n    // if(window.mode === 'create'){\n    //     if (mouse_down && keys[16] && temp_cut) {\n    //         const mouse_adjusted = {\n    //             x: mousePosition.x - paperContainer.getBoundingClientRect().left,\n    //             y: mousePosition.y - paperContainer.getBoundingClientRect().top\n    //         };\n    //         temp_cut.set('position', {\n    //             x: Math.min(mouse_adjusted.x, initial_cut_pos.x),\n    //             y: Math.min(mouse_adjusted.y, initial_cut_pos.y)\n    //         })\n    //         temp_cut.attr('rect/width', Math.abs(mouse_adjusted.x - initial_cut_pos.x));\n    //         temp_cut.attr('rect/height', Math.abs(mouse_adjusted.y - initial_cut_pos.y));\n    //     }\n    // }\n// })\n\n// $(document).on('mousedown', function(event) {\n    //mouse_down = true;\n    // if (keys[16] && window.mode === 'create') {\n\n    //     initial_cut_pos = Object.assign({}, mousePosition);\n    //     initial_cut_pos.x -= paperContainer.getBoundingClientRect().left;\n    //     initial_cut_pos.y -= paperContainer.getBoundingClientRect().top;\n    //     let config  = {\n    //         position: Object.assign({}, initial_cut_pos),\n    //         size: {width: 0, height: 0}\n    //     }\n    //     temp_cut = new Cut().create(config);\n    //     temp_cut.active()\n    //     event.preventDefault();\n    // }\n// });\n\n// $(document).on('mouseup', function(event) {\n    //mouse_down = false;\n    // if (window.mode === 'proof') {\n    //     if (!selected_premise && window.action && window.action.name === 'insertDoubleCut') {\n    //         const mouse_adjusted = {\n    //             x: mousePosition.x - paperContainer.getBoundingClientRect().left,\n    //             y: mousePosition.y - paperContainer.getBoundingClientRect().top\n    //         };\n    //         window.action(null, mouse_adjusted);\n    //         window.action = null;\n    //     }\n    // }\n    // if (temp_cut && window.mode === 'create') {\n    //     const position = _.clone(temp_cut.get('position'));\n    //     const size = _.clone({width: temp_cut.attr('rect/width'), height: temp_cut.attr('rect/height')});\n    //     const config = {\n    //         position: position,\n    //         attrs:{\n    //             rect: {\n    //                 ...size\n    //             }\n    //         }\n    //     }\n    //     //eslint-disable-next-line\n    //     let new_rect = new Cut().create(config);\n    //     temp_cut.remove();\n    // }\n\n    // paper.setInteractivity(true);\n    // temp_cut = undefined;\n// });\n\n// $(document).on('keyup', function(event){\n    // if(window.mode === 'proof'){\n    //     if(window.action && window.action.name === 'inferenceInsertion') {\n    //         if (!selected_premise) return;\n    //         if (selected_premise.attributes.attrs.level % 2 === 1) return;\n    //         if (event.keyCode >= 65 && event.keyCode <= 90) {\n    //             let config = {\n    //                 //use capital letters by default, can press shift to make lowercase\n    //                 attrs:{\n    //                     text: {\n    //                         text:event.shiftKey ? event.key.toLocaleLowerCase() : event.key.toLocaleUpperCase()\n    //                     }\n    //                 },\n    //                 position: {\n    //                     x: mousePosition.x - paperContainer.getBoundingClientRect().left - 20,\n    //                     y: mousePosition.y - paperContainer.getBoundingClientRect().top - 20\n    //                 }\n    //             }\n    //             //eslint-disable-next-line\n    //             let new_rect = new Premise().create(config)\n    //         }\n    //         window.action = null;\n    //     }\n    //     return;\n    // }\n    // console.log(event.which);\n    // keys[event.which] = false;\n    // let key = event.key\n    // //backspace (delete premise or cut)\n    // if (event.keyCode === 8 ) {\n    //     if (selected_premise) {\n    //         let delete_noise = new Audio(Delete); \n    //         if (selected_premise.attributes.type === \"dia.Element.Premise\") {\n    //             selected_premise.destroy()\n    //             delete_noise.play();\n    //         } else if (selected_premise.attributes.type === \"dia.Element.Cut\") {\n    //             selected_premise.destroy();        // Play pop sound\n    //             delete_noise.play();\n    //         } else {\n    //             console.error(\"attempted to delete shape of unknown type: \" + selected_premise.attributes.type)\n    //         }\n    //     }\n    //     selected_premise = undefined;\n    // }\n    // //a-z for creating premise\n    // if (event.keyCode >= 65 && event.keyCode <= 90) {\n    //     let config = {\n    //         //use capital letters by default, can press shift to make lowercase\n    //         attrs:{\n    //             text: {\n    //                 text:event.shiftKey ? key.toLocaleLowerCase() : key.toLocaleUpperCase()\n    //             }\n    //         },\n    //         position: {\n    //             x: mousePosition.x - paperContainer.getBoundingClientRect().left - 20,\n    //             y: mousePosition.y - paperContainer.getBoundingClientRect().top - 20\n    //         }\n    //     }\n    //     //eslint-disable-next-line\n    //     let new_rect = new Premise().create(config)\n    // }\n    // //ENTER\n    // // new cut\n    // if (event.keyCode === 13) {\n    //     let config = {\n    //         position: {\n    //             x: mousePosition.x - paperContainer.getBoundingClientRect().left - 20,\n    //             y: mousePosition.y - paperContainer.getBoundingClientRect().top - 20\n    //         }\n    //     }\n    //     if (selected_premise) {\n    //         config[\"child\"] = selected_premise\n    //         let new_cut = new Cut().create(config)\n    //     } else {\n    //         console.log(\"creating empty cut\")\n    //         let new_cut = new Cut().create(config)\n    //         console.log(\"cut\", new_cut)\n    //     }\n    // }\n\n    // if (event.keyCode === 49) {\n    //     //save template\n    //     if (selected_premise) {\n    //         saved_template = graph.cloneSubgraph([selected_premise], {deep: true});\n    //     }\n    // }\n\n    // if (event.keyCode === 50) {\n    //     let position = {\n    //         x: mousePosition.x - paperContainer.getBoundingClientRect().left - 20,\n    //         y: mousePosition.y - paperContainer.getBoundingClientRect().top - 20\n    //     }\n    //     console.log(\"position\", position)\n    //     if (saved_template) {\n    //         addSubgraph(saved_template, position);\n    //     }\n    // }\n    // event.preventDefault()\n// });\n\n\n\n// // paper events\n// paper.on(\"element:mouseenter\", function( cellView, evt){\n//     let model = cellView.model\n//     let modelView = model.findView(paper);\n//     modelView.showTools()\n//     model.attr(\"rect/stroke\", \"red\")\n//     model.attr(\"text/fill\", \"red\")\n//     selected_premise = model\n// })\n\n// paper.on(\"element:mouseleave\", function( cellView, evt){\n//     let model = cellView.model\n//     let modelView = model.findView(paper);\n//     if(!modelView) return;\n//     modelView.hideTools()\n//     model.attr(\"rect/stroke\", \"black\")\n//     model.attr(\"text/fill\", \"black\")\n//     selected_premise = undefined;\n// })\n\n// // First, unembed the cell that has just been grabbed by the user.\n// paper.on('cell:pointerdown', function(cellView, evt, x, y) {\n    \n//     let cell = cellView.model;\n\n//     if (!cell.get('embeds') || cell.get('embeds').length === 0) {\n//         // Show the dragged element above all the other cells (except when the\n//         // element is a parent).\n//         cell.toFront();\n//     }\n    \n//     if (cell.get('parent')) {\n//         graph.getCell(cell.get('parent')).unembed(cell);\n//     }\n\n//     cell.active();\n//     treeToFront(findRoot(cell));\n// });\n\n// // When the dragged cell is dropped over another cell, let it become a child of the\n// // element below.\n// paper.on('cell:pointerup', function(cellView, evt, x, y) {\n\n//     let cell = cellView.model;\n    \n//     handleCollisions(cell)\n//     cell.inactive();\n\n//     if (window.action) window.action(cell);\n//     window.action = null;\n// });\n"],"sourceRoot":""}